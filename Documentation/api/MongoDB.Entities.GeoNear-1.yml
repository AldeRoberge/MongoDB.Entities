### YamlMime:ManagedReference
items:
- uid: MongoDB.Entities.GeoNear`1
  commentId: T:MongoDB.Entities.GeoNear`1
  id: GeoNear`1
  parent: MongoDB.Entities
  children:
  - MongoDB.Entities.GeoNear`1.distanceField
  - MongoDB.Entities.GeoNear`1.distanceMultiplier
  - MongoDB.Entities.GeoNear`1.includeLocs
  - MongoDB.Entities.GeoNear`1.key
  - MongoDB.Entities.GeoNear`1.limit
  - MongoDB.Entities.GeoNear`1.maxDistance
  - MongoDB.Entities.GeoNear`1.minDistance
  - MongoDB.Entities.GeoNear`1.near
  - MongoDB.Entities.GeoNear`1.query
  - MongoDB.Entities.GeoNear`1.spherical
  langs:
  - csharp
  - vb
  name: GeoNear<T>
  nameWithType: GeoNear<T>
  fullName: MongoDB.Entities.GeoNear<T>
  type: Class
  source:
    id: GeoNear
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\GeoNear.cs
    startLine: 48
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  summary: "\nFluent aggregation pipeline builder for GeoNear\n"
  example: []
  syntax:
    content: 'public class GeoNear<T> : object where T : IEntity'
    typeParameters:
    - id: T
      description: The type of entity
    content.vb: >-
      Public Class GeoNear(Of T As IEntity)

          Inherits Object
  inheritance:
  - System.Object
  nameWithType.vb: GeoNear(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: MongoDB.Entities.GeoNear(Of T)
  name.vb: GeoNear(Of T)
- uid: MongoDB.Entities.GeoNear`1.near
  commentId: P:MongoDB.Entities.GeoNear`1.near
  id: near
  parent: MongoDB.Entities.GeoNear`1
  langs:
  - csharp
  - vb
  name: near
  nameWithType: GeoNear<T>.near
  fullName: MongoDB.Entities.GeoNear<T>.near
  type: Property
  source:
    id: near
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\GeoNear.cs
    startLine: 50
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  syntax:
    content: public Coordinates2D near { get; set; }
    parameters: []
    return:
      type: MongoDB.Entities.Coordinates2D
    content.vb: Public Property near As Coordinates2D
  overload: MongoDB.Entities.GeoNear`1.near*
  nameWithType.vb: GeoNear(Of T).near
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: MongoDB.Entities.GeoNear(Of T).near
- uid: MongoDB.Entities.GeoNear`1.distanceField
  commentId: P:MongoDB.Entities.GeoNear`1.distanceField
  id: distanceField
  parent: MongoDB.Entities.GeoNear`1
  langs:
  - csharp
  - vb
  name: distanceField
  nameWithType: GeoNear<T>.distanceField
  fullName: MongoDB.Entities.GeoNear<T>.distanceField
  type: Property
  source:
    id: distanceField
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\GeoNear.cs
    startLine: 51
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  syntax:
    content: public string distanceField { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property distanceField As String
  overload: MongoDB.Entities.GeoNear`1.distanceField*
  nameWithType.vb: GeoNear(Of T).distanceField
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: MongoDB.Entities.GeoNear(Of T).distanceField
- uid: MongoDB.Entities.GeoNear`1.spherical
  commentId: P:MongoDB.Entities.GeoNear`1.spherical
  id: spherical
  parent: MongoDB.Entities.GeoNear`1
  langs:
  - csharp
  - vb
  name: spherical
  nameWithType: GeoNear<T>.spherical
  fullName: MongoDB.Entities.GeoNear<T>.spherical
  type: Property
  source:
    id: spherical
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\GeoNear.cs
    startLine: 52
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  syntax:
    content: public bool spherical { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property spherical As Boolean
  overload: MongoDB.Entities.GeoNear`1.spherical*
  nameWithType.vb: GeoNear(Of T).spherical
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: MongoDB.Entities.GeoNear(Of T).spherical
- uid: MongoDB.Entities.GeoNear`1.limit
  commentId: P:MongoDB.Entities.GeoNear`1.limit
  id: limit
  parent: MongoDB.Entities.GeoNear`1
  langs:
  - csharp
  - vb
  name: limit
  nameWithType: GeoNear<T>.limit
  fullName: MongoDB.Entities.GeoNear<T>.limit
  type: Property
  source:
    id: limit
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\GeoNear.cs
    startLine: 53
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  syntax:
    content: public int? limit { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property limit As Integer?
  overload: MongoDB.Entities.GeoNear`1.limit*
  nameWithType.vb: GeoNear(Of T).limit
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: MongoDB.Entities.GeoNear(Of T).limit
- uid: MongoDB.Entities.GeoNear`1.maxDistance
  commentId: P:MongoDB.Entities.GeoNear`1.maxDistance
  id: maxDistance
  parent: MongoDB.Entities.GeoNear`1
  langs:
  - csharp
  - vb
  name: maxDistance
  nameWithType: GeoNear<T>.maxDistance
  fullName: MongoDB.Entities.GeoNear<T>.maxDistance
  type: Property
  source:
    id: maxDistance
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\GeoNear.cs
    startLine: 54
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  syntax:
    content: public double? maxDistance { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property maxDistance As Double?
  overload: MongoDB.Entities.GeoNear`1.maxDistance*
  nameWithType.vb: GeoNear(Of T).maxDistance
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: MongoDB.Entities.GeoNear(Of T).maxDistance
- uid: MongoDB.Entities.GeoNear`1.query
  commentId: P:MongoDB.Entities.GeoNear`1.query
  id: query
  parent: MongoDB.Entities.GeoNear`1
  langs:
  - csharp
  - vb
  name: query
  nameWithType: GeoNear<T>.query
  fullName: MongoDB.Entities.GeoNear<T>.query
  type: Property
  source:
    id: query
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\GeoNear.cs
    startLine: 55
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  syntax:
    content: public BsonDocument query { get; set; }
    parameters: []
    return:
      type: BsonDocument
    content.vb: Public Property query As BsonDocument
  overload: MongoDB.Entities.GeoNear`1.query*
  nameWithType.vb: GeoNear(Of T).query
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: MongoDB.Entities.GeoNear(Of T).query
- uid: MongoDB.Entities.GeoNear`1.distanceMultiplier
  commentId: P:MongoDB.Entities.GeoNear`1.distanceMultiplier
  id: distanceMultiplier
  parent: MongoDB.Entities.GeoNear`1
  langs:
  - csharp
  - vb
  name: distanceMultiplier
  nameWithType: GeoNear<T>.distanceMultiplier
  fullName: MongoDB.Entities.GeoNear<T>.distanceMultiplier
  type: Property
  source:
    id: distanceMultiplier
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\GeoNear.cs
    startLine: 56
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  syntax:
    content: public double? distanceMultiplier { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property distanceMultiplier As Double?
  overload: MongoDB.Entities.GeoNear`1.distanceMultiplier*
  nameWithType.vb: GeoNear(Of T).distanceMultiplier
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: MongoDB.Entities.GeoNear(Of T).distanceMultiplier
- uid: MongoDB.Entities.GeoNear`1.includeLocs
  commentId: P:MongoDB.Entities.GeoNear`1.includeLocs
  id: includeLocs
  parent: MongoDB.Entities.GeoNear`1
  langs:
  - csharp
  - vb
  name: includeLocs
  nameWithType: GeoNear<T>.includeLocs
  fullName: MongoDB.Entities.GeoNear<T>.includeLocs
  type: Property
  source:
    id: includeLocs
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\GeoNear.cs
    startLine: 57
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  syntax:
    content: public string includeLocs { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property includeLocs As String
  overload: MongoDB.Entities.GeoNear`1.includeLocs*
  nameWithType.vb: GeoNear(Of T).includeLocs
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: MongoDB.Entities.GeoNear(Of T).includeLocs
- uid: MongoDB.Entities.GeoNear`1.minDistance
  commentId: P:MongoDB.Entities.GeoNear`1.minDistance
  id: minDistance
  parent: MongoDB.Entities.GeoNear`1
  langs:
  - csharp
  - vb
  name: minDistance
  nameWithType: GeoNear<T>.minDistance
  fullName: MongoDB.Entities.GeoNear<T>.minDistance
  type: Property
  source:
    id: minDistance
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\GeoNear.cs
    startLine: 58
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  syntax:
    content: public double? minDistance { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property minDistance As Double?
  overload: MongoDB.Entities.GeoNear`1.minDistance*
  nameWithType.vb: GeoNear(Of T).minDistance
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: MongoDB.Entities.GeoNear(Of T).minDistance
- uid: MongoDB.Entities.GeoNear`1.key
  commentId: P:MongoDB.Entities.GeoNear`1.key
  id: key
  parent: MongoDB.Entities.GeoNear`1
  langs:
  - csharp
  - vb
  name: key
  nameWithType: GeoNear<T>.key
  fullName: MongoDB.Entities.GeoNear<T>.key
  type: Property
  source:
    id: key
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\GeoNear.cs
    startLine: 59
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  syntax:
    content: public string key { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property key As String
  overload: MongoDB.Entities.GeoNear`1.key*
  nameWithType.vb: GeoNear(Of T).key
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: MongoDB.Entities.GeoNear(Of T).key
references:
- uid: MongoDB.Entities
  commentId: N:MongoDB.Entities
  name: MongoDB.Entities
  nameWithType: MongoDB.Entities
  fullName: MongoDB.Entities
- uid: MongoDB.Entities.GeoNear`1.near*
  commentId: Overload:MongoDB.Entities.GeoNear`1.near
  name: near
  nameWithType: GeoNear<T>.near
  fullName: MongoDB.Entities.GeoNear<T>.near
  nameWithType.vb: GeoNear(Of T).near
  fullName.vb: MongoDB.Entities.GeoNear(Of T).near
- uid: MongoDB.Entities.Coordinates2D
  commentId: T:MongoDB.Entities.Coordinates2D
  parent: MongoDB.Entities
  name: Coordinates2D
  nameWithType: Coordinates2D
  fullName: MongoDB.Entities.Coordinates2D
- uid: MongoDB.Entities.GeoNear`1.distanceField*
  commentId: Overload:MongoDB.Entities.GeoNear`1.distanceField
  name: distanceField
  nameWithType: GeoNear<T>.distanceField
  fullName: MongoDB.Entities.GeoNear<T>.distanceField
  nameWithType.vb: GeoNear(Of T).distanceField
  fullName.vb: MongoDB.Entities.GeoNear(Of T).distanceField
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: MongoDB.Entities.GeoNear`1.spherical*
  commentId: Overload:MongoDB.Entities.GeoNear`1.spherical
  name: spherical
  nameWithType: GeoNear<T>.spherical
  fullName: MongoDB.Entities.GeoNear<T>.spherical
  nameWithType.vb: GeoNear(Of T).spherical
  fullName.vb: MongoDB.Entities.GeoNear(Of T).spherical
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: MongoDB.Entities.GeoNear`1.limit*
  commentId: Overload:MongoDB.Entities.GeoNear`1.limit
  name: limit
  nameWithType: GeoNear<T>.limit
  fullName: MongoDB.Entities.GeoNear<T>.limit
  nameWithType.vb: GeoNear(Of T).limit
  fullName.vb: MongoDB.Entities.GeoNear(Of T).limit
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.GeoNear`1.maxDistance*
  commentId: Overload:MongoDB.Entities.GeoNear`1.maxDistance
  name: maxDistance
  nameWithType: GeoNear<T>.maxDistance
  fullName: MongoDB.Entities.GeoNear<T>.maxDistance
  nameWithType.vb: GeoNear(Of T).maxDistance
  fullName.vb: MongoDB.Entities.GeoNear(Of T).maxDistance
- uid: System.Nullable{System.Double}
  commentId: '!:System.Nullable{System.Double}'
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.GeoNear`1.query*
  commentId: Overload:MongoDB.Entities.GeoNear`1.query
  name: query
  nameWithType: GeoNear<T>.query
  fullName: MongoDB.Entities.GeoNear<T>.query
  nameWithType.vb: GeoNear(Of T).query
  fullName.vb: MongoDB.Entities.GeoNear(Of T).query
- uid: BsonDocument
  isExternal: true
  name: BsonDocument
  nameWithType: BsonDocument
  fullName: BsonDocument
- uid: MongoDB.Entities.GeoNear`1.distanceMultiplier*
  commentId: Overload:MongoDB.Entities.GeoNear`1.distanceMultiplier
  name: distanceMultiplier
  nameWithType: GeoNear<T>.distanceMultiplier
  fullName: MongoDB.Entities.GeoNear<T>.distanceMultiplier
  nameWithType.vb: GeoNear(Of T).distanceMultiplier
  fullName.vb: MongoDB.Entities.GeoNear(Of T).distanceMultiplier
- uid: MongoDB.Entities.GeoNear`1.includeLocs*
  commentId: Overload:MongoDB.Entities.GeoNear`1.includeLocs
  name: includeLocs
  nameWithType: GeoNear<T>.includeLocs
  fullName: MongoDB.Entities.GeoNear<T>.includeLocs
  nameWithType.vb: GeoNear(Of T).includeLocs
  fullName.vb: MongoDB.Entities.GeoNear(Of T).includeLocs
- uid: MongoDB.Entities.GeoNear`1.minDistance*
  commentId: Overload:MongoDB.Entities.GeoNear`1.minDistance
  name: minDistance
  nameWithType: GeoNear<T>.minDistance
  fullName: MongoDB.Entities.GeoNear<T>.minDistance
  nameWithType.vb: GeoNear(Of T).minDistance
  fullName.vb: MongoDB.Entities.GeoNear(Of T).minDistance
- uid: MongoDB.Entities.GeoNear`1.key*
  commentId: Overload:MongoDB.Entities.GeoNear`1.key
  name: key
  nameWithType: GeoNear<T>.key
  fullName: MongoDB.Entities.GeoNear<T>.key
  nameWithType.vb: GeoNear(Of T).key
  fullName.vb: MongoDB.Entities.GeoNear(Of T).key
