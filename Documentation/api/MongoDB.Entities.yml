### YamlMime:ManagedReference
items:
- uid: MongoDB.Entities
  commentId: N:MongoDB.Entities
  id: MongoDB.Entities
  children:
  - MongoDB.Entities.AsObjectIdAttribute
  - MongoDB.Entities.CollectionAttribute
  - MongoDB.Entities.Coordinates2D
  - MongoDB.Entities.DataStreamer
  - MongoDB.Entities.Date
  - MongoDB.Entities.DB
  - MongoDB.Entities.DBContext
  - MongoDB.Entities.Distinct`2
  - MongoDB.Entities.DontPreserveAttribute
  - MongoDB.Entities.Entity
  - MongoDB.Entities.EventType
  - MongoDB.Entities.Extensions
  - MongoDB.Entities.FieldAttribute
  - MongoDB.Entities.FileEntity
  - MongoDB.Entities.Find`1
  - MongoDB.Entities.Find`2
  - MongoDB.Entities.FuzzyString
  - MongoDB.Entities.GeoNear`1
  - MongoDB.Entities.ICreatedOn
  - MongoDB.Entities.IEntity
  - MongoDB.Entities.IgnoreAttribute
  - MongoDB.Entities.IMigration
  - MongoDB.Entities.IModifiedOn
  - MongoDB.Entities.Index`1
  - MongoDB.Entities.InverseSideAttribute
  - MongoDB.Entities.JoinRecord
  - MongoDB.Entities.KeyType
  - MongoDB.Entities.Many`1
  - MongoDB.Entities.ManyBase
  - MongoDB.Entities.Migration
  - MongoDB.Entities.ModifiedBy
  - MongoDB.Entities.NameAttribute
  - MongoDB.Entities.ObjectIdAttribute
  - MongoDB.Entities.One`1
  - MongoDB.Entities.Order
  - MongoDB.Entities.OwnerSideAttribute
  - MongoDB.Entities.PreserveAttribute
  - MongoDB.Entities.Prop
  - MongoDB.Entities.Replace`1
  - MongoDB.Entities.Search
  - MongoDB.Entities.Template
  - MongoDB.Entities.Template`1
  - MongoDB.Entities.Template`2
  - MongoDB.Entities.Transaction
  - MongoDB.Entities.Update`1
  - MongoDB.Entities.UpdateAndGet`1
  - MongoDB.Entities.UpdateAndGet`2
  - MongoDB.Entities.UpdateBase`1
  - MongoDB.Entities.Watcher`1
  langs:
  - csharp
  - vb
  name: MongoDB.Entities
  nameWithType: MongoDB.Entities
  fullName: MongoDB.Entities
  type: Namespace
  assemblies:
  - MongoDB.Entities
references:
- uid: MongoDB.Entities.Distinct`2
  commentId: T:MongoDB.Entities.Distinct`2
  parent: MongoDB.Entities
  name: Distinct<T, TProperty>
  nameWithType: Distinct<T, TProperty>
  fullName: MongoDB.Entities.Distinct<T, TProperty>
  nameWithType.vb: Distinct(Of T, TProperty)
  fullName.vb: MongoDB.Entities.Distinct(Of T, TProperty)
  name.vb: Distinct(Of T, TProperty)
  spec.csharp:
  - uid: MongoDB.Entities.Distinct`2
    name: Distinct
    nameWithType: Distinct
    fullName: MongoDB.Entities.Distinct
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.Distinct`2
    name: Distinct
    nameWithType: Distinct
    fullName: MongoDB.Entities.Distinct
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Find`1
  commentId: T:MongoDB.Entities.Find`1
  name: Find<T>
  nameWithType: Find<T>
  fullName: MongoDB.Entities.Find<T>
  nameWithType.vb: Find(Of T)
  fullName.vb: MongoDB.Entities.Find(Of T)
  name.vb: Find(Of T)
  spec.csharp:
  - uid: MongoDB.Entities.Find`1
    name: Find
    nameWithType: Find
    fullName: MongoDB.Entities.Find
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.Find`1
    name: Find
    nameWithType: Find
    fullName: MongoDB.Entities.Find
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Find`2
  commentId: T:MongoDB.Entities.Find`2
  parent: MongoDB.Entities
  name: Find<T, TProjection>
  nameWithType: Find<T, TProjection>
  fullName: MongoDB.Entities.Find<T, TProjection>
  nameWithType.vb: Find(Of T, TProjection)
  fullName.vb: MongoDB.Entities.Find(Of T, TProjection)
  name.vb: Find(Of T, TProjection)
  spec.csharp:
  - uid: MongoDB.Entities.Find`2
    name: Find
    nameWithType: Find
    fullName: MongoDB.Entities.Find
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProjection
    nameWithType: TProjection
    fullName: TProjection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.Find`2
    name: Find
    nameWithType: Find
    fullName: MongoDB.Entities.Find
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProjection
    nameWithType: TProjection
    fullName: TProjection
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Order
  commentId: T:MongoDB.Entities.Order
  parent: MongoDB.Entities
  name: Order
  nameWithType: Order
  fullName: MongoDB.Entities.Order
- uid: MongoDB.Entities.Search
  commentId: T:MongoDB.Entities.Search
  parent: MongoDB.Entities
  name: Search
  nameWithType: Search
  fullName: MongoDB.Entities.Search
- uid: MongoDB.Entities.Index`1
  commentId: T:MongoDB.Entities.Index`1
  parent: MongoDB.Entities
  name: Index<T>
  nameWithType: Index<T>
  fullName: MongoDB.Entities.Index<T>
  nameWithType.vb: Index(Of T)
  fullName.vb: MongoDB.Entities.Index(Of T)
  name.vb: Index(Of T)
  spec.csharp:
  - uid: MongoDB.Entities.Index`1
    name: Index
    nameWithType: Index
    fullName: MongoDB.Entities.Index
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.Index`1
    name: Index
    nameWithType: Index
    fullName: MongoDB.Entities.Index
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.KeyType
  commentId: T:MongoDB.Entities.KeyType
  parent: MongoDB.Entities
  name: KeyType
  nameWithType: KeyType
  fullName: MongoDB.Entities.KeyType
- uid: MongoDB.Entities.Replace`1
  commentId: T:MongoDB.Entities.Replace`1
  parent: MongoDB.Entities
  name: Replace<T>
  nameWithType: Replace<T>
  fullName: MongoDB.Entities.Replace<T>
  nameWithType.vb: Replace(Of T)
  fullName.vb: MongoDB.Entities.Replace(Of T)
  name.vb: Replace(Of T)
  spec.csharp:
  - uid: MongoDB.Entities.Replace`1
    name: Replace
    nameWithType: Replace
    fullName: MongoDB.Entities.Replace
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.Replace`1
    name: Replace
    nameWithType: Replace
    fullName: MongoDB.Entities.Replace
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateBase`1
  commentId: T:MongoDB.Entities.UpdateBase`1
  name: UpdateBase<T>
  nameWithType: UpdateBase<T>
  fullName: MongoDB.Entities.UpdateBase<T>
  nameWithType.vb: UpdateBase(Of T)
  fullName.vb: MongoDB.Entities.UpdateBase(Of T)
  name.vb: UpdateBase(Of T)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateBase`1
    name: UpdateBase
    nameWithType: UpdateBase
    fullName: MongoDB.Entities.UpdateBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.UpdateBase`1
    name: UpdateBase
    nameWithType: UpdateBase
    fullName: MongoDB.Entities.UpdateBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Update`1
  commentId: T:MongoDB.Entities.Update`1
  parent: MongoDB.Entities
  name: Update<T>
  nameWithType: Update<T>
  fullName: MongoDB.Entities.Update<T>
  nameWithType.vb: Update(Of T)
  fullName.vb: MongoDB.Entities.Update(Of T)
  name.vb: Update(Of T)
  spec.csharp:
  - uid: MongoDB.Entities.Update`1
    name: Update
    nameWithType: Update
    fullName: MongoDB.Entities.Update
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.Update`1
    name: Update
    nameWithType: Update
    fullName: MongoDB.Entities.Update
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`1
  commentId: T:MongoDB.Entities.UpdateAndGet`1
  name: UpdateAndGet<T>
  nameWithType: UpdateAndGet<T>
  fullName: MongoDB.Entities.UpdateAndGet<T>
  nameWithType.vb: UpdateAndGet(Of T)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T)
  name.vb: UpdateAndGet(Of T)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`1
    name: UpdateAndGet
    nameWithType: UpdateAndGet
    fullName: MongoDB.Entities.UpdateAndGet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`1
    name: UpdateAndGet
    nameWithType: UpdateAndGet
    fullName: MongoDB.Entities.UpdateAndGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2
  commentId: T:MongoDB.Entities.UpdateAndGet`2
  parent: MongoDB.Entities
  name: UpdateAndGet<T, TProjection>
  nameWithType: UpdateAndGet<T, TProjection>
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>
  nameWithType.vb: UpdateAndGet(Of T, TProjection)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection)
  name.vb: UpdateAndGet(Of T, TProjection)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2
    name: UpdateAndGet
    nameWithType: UpdateAndGet
    fullName: MongoDB.Entities.UpdateAndGet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProjection
    nameWithType: TProjection
    fullName: TProjection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2
    name: UpdateAndGet
    nameWithType: UpdateAndGet
    fullName: MongoDB.Entities.UpdateAndGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProjection
    nameWithType: TProjection
    fullName: TProjection
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.IgnoreAttribute
  commentId: T:MongoDB.Entities.IgnoreAttribute
  name: IgnoreAttribute
  nameWithType: IgnoreAttribute
  fullName: MongoDB.Entities.IgnoreAttribute
- uid: MongoDB.Entities.FieldAttribute
  commentId: T:MongoDB.Entities.FieldAttribute
  name: FieldAttribute
  nameWithType: FieldAttribute
  fullName: MongoDB.Entities.FieldAttribute
- uid: MongoDB.Entities.OwnerSideAttribute
  commentId: T:MongoDB.Entities.OwnerSideAttribute
  name: OwnerSideAttribute
  nameWithType: OwnerSideAttribute
  fullName: MongoDB.Entities.OwnerSideAttribute
- uid: MongoDB.Entities.InverseSideAttribute
  commentId: T:MongoDB.Entities.InverseSideAttribute
  name: InverseSideAttribute
  nameWithType: InverseSideAttribute
  fullName: MongoDB.Entities.InverseSideAttribute
- uid: MongoDB.Entities.NameAttribute
  commentId: T:MongoDB.Entities.NameAttribute
  name: NameAttribute
  nameWithType: NameAttribute
  fullName: MongoDB.Entities.NameAttribute
- uid: MongoDB.Entities.CollectionAttribute
  commentId: T:MongoDB.Entities.CollectionAttribute
  parent: MongoDB.Entities
  name: CollectionAttribute
  nameWithType: CollectionAttribute
  fullName: MongoDB.Entities.CollectionAttribute
- uid: MongoDB.Entities.PreserveAttribute
  commentId: T:MongoDB.Entities.PreserveAttribute
  name: PreserveAttribute
  nameWithType: PreserveAttribute
  fullName: MongoDB.Entities.PreserveAttribute
- uid: MongoDB.Entities.DontPreserveAttribute
  commentId: T:MongoDB.Entities.DontPreserveAttribute
  name: DontPreserveAttribute
  nameWithType: DontPreserveAttribute
  fullName: MongoDB.Entities.DontPreserveAttribute
- uid: MongoDB.Entities.ObjectIdAttribute
  commentId: T:MongoDB.Entities.ObjectIdAttribute
  name: ObjectIdAttribute
  nameWithType: ObjectIdAttribute
  fullName: MongoDB.Entities.ObjectIdAttribute
- uid: MongoDB.Entities.AsObjectIdAttribute
  commentId: T:MongoDB.Entities.AsObjectIdAttribute
  name: AsObjectIdAttribute
  nameWithType: AsObjectIdAttribute
  fullName: MongoDB.Entities.AsObjectIdAttribute
- uid: MongoDB.Entities.Date
  commentId: T:MongoDB.Entities.Date
  parent: MongoDB.Entities
  name: Date
  nameWithType: Date
  fullName: MongoDB.Entities.Date
- uid: MongoDB.Entities.Entity
  commentId: T:MongoDB.Entities.Entity
  parent: MongoDB.Entities
  name: Entity
  nameWithType: Entity
  fullName: MongoDB.Entities.Entity
- uid: MongoDB.Entities.Extensions
  commentId: T:MongoDB.Entities.Extensions
  parent: MongoDB.Entities
  name: Extensions
  nameWithType: Extensions
  fullName: MongoDB.Entities.Extensions
- uid: MongoDB.Entities.FileEntity
  commentId: T:MongoDB.Entities.FileEntity
  parent: MongoDB.Entities
  name: FileEntity
  nameWithType: FileEntity
  fullName: MongoDB.Entities.FileEntity
- uid: MongoDB.Entities.DataStreamer
  commentId: T:MongoDB.Entities.DataStreamer
  parent: MongoDB.Entities
  name: DataStreamer
  nameWithType: DataStreamer
  fullName: MongoDB.Entities.DataStreamer
- uid: MongoDB.Entities.FuzzyString
  commentId: T:MongoDB.Entities.FuzzyString
  parent: MongoDB.Entities
  name: FuzzyString
  nameWithType: FuzzyString
  fullName: MongoDB.Entities.FuzzyString
- uid: MongoDB.Entities.Coordinates2D
  commentId: T:MongoDB.Entities.Coordinates2D
  parent: MongoDB.Entities
  name: Coordinates2D
  nameWithType: Coordinates2D
  fullName: MongoDB.Entities.Coordinates2D
- uid: MongoDB.Entities.GeoNear`1
  commentId: T:MongoDB.Entities.GeoNear`1
  name: GeoNear<T>
  nameWithType: GeoNear<T>
  fullName: MongoDB.Entities.GeoNear<T>
  nameWithType.vb: GeoNear(Of T)
  fullName.vb: MongoDB.Entities.GeoNear(Of T)
  name.vb: GeoNear(Of T)
  spec.csharp:
  - uid: MongoDB.Entities.GeoNear`1
    name: GeoNear
    nameWithType: GeoNear
    fullName: MongoDB.Entities.GeoNear
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.GeoNear`1
    name: GeoNear
    nameWithType: GeoNear
    fullName: MongoDB.Entities.GeoNear
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.ICreatedOn
  commentId: T:MongoDB.Entities.ICreatedOn
  name: ICreatedOn
  nameWithType: ICreatedOn
  fullName: MongoDB.Entities.ICreatedOn
- uid: MongoDB.Entities.IEntity
  commentId: T:MongoDB.Entities.IEntity
  parent: MongoDB.Entities
  name: IEntity
  nameWithType: IEntity
  fullName: MongoDB.Entities.IEntity
- uid: MongoDB.Entities.IModifiedOn
  commentId: T:MongoDB.Entities.IModifiedOn
  name: IModifiedOn
  nameWithType: IModifiedOn
  fullName: MongoDB.Entities.IModifiedOn
- uid: MongoDB.Entities.ModifiedBy
  commentId: T:MongoDB.Entities.ModifiedBy
  parent: MongoDB.Entities
  name: ModifiedBy
  nameWithType: ModifiedBy
  fullName: MongoDB.Entities.ModifiedBy
- uid: MongoDB.Entities.Prop
  commentId: T:MongoDB.Entities.Prop
  name: Prop
  nameWithType: Prop
  fullName: MongoDB.Entities.Prop
- uid: MongoDB.Entities.Template`1
  commentId: T:MongoDB.Entities.Template`1
  name: Template<T>
  nameWithType: Template<T>
  fullName: MongoDB.Entities.Template<T>
  nameWithType.vb: Template(Of T)
  fullName.vb: MongoDB.Entities.Template(Of T)
  name.vb: Template(Of T)
  spec.csharp:
  - uid: MongoDB.Entities.Template`1
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.Template`1
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Template`2
  commentId: T:MongoDB.Entities.Template`2
  parent: MongoDB.Entities
  name: Template<TInput, TResult>
  nameWithType: Template<TInput, TResult>
  fullName: MongoDB.Entities.Template<TInput, TResult>
  nameWithType.vb: Template(Of TInput, TResult)
  fullName.vb: MongoDB.Entities.Template(Of TInput, TResult)
  name.vb: Template(Of TInput, TResult)
  spec.csharp:
  - uid: MongoDB.Entities.Template`2
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: <
    nameWithType: <
    fullName: <
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.Template`2
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Template
  commentId: T:MongoDB.Entities.Template
  parent: MongoDB.Entities
  name: Template
  nameWithType: Template
  fullName: MongoDB.Entities.Template
- uid: MongoDB.Entities.Transaction
  commentId: T:MongoDB.Entities.Transaction
  parent: MongoDB.Entities
  name: Transaction
  nameWithType: Transaction
  fullName: MongoDB.Entities.Transaction
- uid: MongoDB.Entities.Watcher`1
  commentId: T:MongoDB.Entities.Watcher`1
  name: Watcher<T>
  nameWithType: Watcher<T>
  fullName: MongoDB.Entities.Watcher<T>
  nameWithType.vb: Watcher(Of T)
  fullName.vb: MongoDB.Entities.Watcher(Of T)
  name.vb: Watcher(Of T)
  spec.csharp:
  - uid: MongoDB.Entities.Watcher`1
    name: Watcher
    nameWithType: Watcher
    fullName: MongoDB.Entities.Watcher
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.Watcher`1
    name: Watcher
    nameWithType: Watcher
    fullName: MongoDB.Entities.Watcher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.EventType
  commentId: T:MongoDB.Entities.EventType
  parent: MongoDB.Entities
  name: EventType
  nameWithType: EventType
  fullName: MongoDB.Entities.EventType
- uid: MongoDB.Entities.DBContext
  commentId: T:MongoDB.Entities.DBContext
  parent: MongoDB.Entities
  name: DBContext
  nameWithType: DBContext
  fullName: MongoDB.Entities.DBContext
- uid: MongoDB.Entities.DB
  commentId: T:MongoDB.Entities.DB
  name: DB
  nameWithType: DB
  fullName: MongoDB.Entities.DB
- uid: MongoDB.Entities.IMigration
  commentId: T:MongoDB.Entities.IMigration
  name: IMigration
  nameWithType: IMigration
  fullName: MongoDB.Entities.IMigration
- uid: MongoDB.Entities.Migration
  commentId: T:MongoDB.Entities.Migration
  name: Migration
  nameWithType: Migration
  fullName: MongoDB.Entities.Migration
- uid: MongoDB.Entities.JoinRecord
  commentId: T:MongoDB.Entities.JoinRecord
  name: JoinRecord
  nameWithType: JoinRecord
  fullName: MongoDB.Entities.JoinRecord
- uid: MongoDB.Entities.Many`1
  commentId: T:MongoDB.Entities.Many`1
  name: Many<TChild>
  nameWithType: Many<TChild>
  fullName: MongoDB.Entities.Many<TChild>
  nameWithType.vb: Many(Of TChild)
  fullName.vb: MongoDB.Entities.Many(Of TChild)
  name.vb: Many(Of TChild)
  spec.csharp:
  - uid: MongoDB.Entities.Many`1
    name: Many
    nameWithType: Many
    fullName: MongoDB.Entities.Many
  - name: <
    nameWithType: <
    fullName: <
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.Many`1
    name: Many
    nameWithType: Many
    fullName: MongoDB.Entities.Many
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.ManyBase
  commentId: T:MongoDB.Entities.ManyBase
  parent: MongoDB.Entities
  name: ManyBase
  nameWithType: ManyBase
  fullName: MongoDB.Entities.ManyBase
- uid: MongoDB.Entities.One`1
  commentId: T:MongoDB.Entities.One`1
  parent: MongoDB.Entities
  name: One<T>
  nameWithType: One<T>
  fullName: MongoDB.Entities.One<T>
  nameWithType.vb: One(Of T)
  fullName.vb: MongoDB.Entities.One(Of T)
  name.vb: One(Of T)
  spec.csharp:
  - uid: MongoDB.Entities.One`1
    name: One
    nameWithType: One
    fullName: MongoDB.Entities.One
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.One`1
    name: One
    nameWithType: One
    fullName: MongoDB.Entities.One
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities
  commentId: N:MongoDB.Entities
  name: MongoDB.Entities
  nameWithType: MongoDB.Entities
  fullName: MongoDB.Entities
