### YamlMime:ManagedReference
items:
- uid: MongoDB.Entities.AsyncEventHandlerExtensions
  commentId: T:MongoDB.Entities.AsyncEventHandlerExtensions
  id: AsyncEventHandlerExtensions
  parent: MongoDB.Entities
  children:
  - MongoDB.Entities.AsyncEventHandlerExtensions.GetHandlers``1(MongoDB.Entities.AsyncEventHandler{``0})
  - MongoDB.Entities.AsyncEventHandlerExtensions.InvokeAllAsync``1(MongoDB.Entities.AsyncEventHandler{``0},``0)
  langs:
  - csharp
  - vb
  name: AsyncEventHandlerExtensions
  nameWithType: AsyncEventHandlerExtensions
  fullName: MongoDB.Entities.AsyncEventHandlerExtensions
  type: Class
  source:
    id: AsyncEventHandlerExtensions
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\Watcher.cs
    startLine: 13
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  syntax:
    content: public static class AsyncEventHandlerExtensions
    content.vb: Public Module AsyncEventHandlerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: MongoDB.Entities.AsyncEventHandlerExtensions.GetHandlers``1(MongoDB.Entities.AsyncEventHandler{``0})
  commentId: M:MongoDB.Entities.AsyncEventHandlerExtensions.GetHandlers``1(MongoDB.Entities.AsyncEventHandler{``0})
  id: GetHandlers``1(MongoDB.Entities.AsyncEventHandler{``0})
  isExtensionMethod: true
  parent: MongoDB.Entities.AsyncEventHandlerExtensions
  langs:
  - csharp
  - vb
  name: GetHandlers<TEventArgs>(AsyncEventHandler<TEventArgs>)
  nameWithType: AsyncEventHandlerExtensions.GetHandlers<TEventArgs>(AsyncEventHandler<TEventArgs>)
  fullName: MongoDB.Entities.AsyncEventHandlerExtensions.GetHandlers<TEventArgs>(MongoDB.Entities.AsyncEventHandler<TEventArgs>)
  type: Method
  source:
    id: GetHandlers
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\Watcher.cs
    startLine: 15
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  syntax:
    content: public static IEnumerable<AsyncEventHandler<TEventArgs>> GetHandlers<TEventArgs>(this AsyncEventHandler<TEventArgs> handler)
    parameters:
    - id: handler
      type: MongoDB.Entities.AsyncEventHandler{{TEventArgs}}
    typeParameters:
    - id: TEventArgs
    return:
      type: System.Collections.Generic.IEnumerable{MongoDB.Entities.AsyncEventHandler{{TEventArgs}}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetHandlers(Of TEventArgs)(handler As AsyncEventHandler(Of TEventArgs)) As IEnumerable(Of AsyncEventHandler(Of TEventArgs))
  overload: MongoDB.Entities.AsyncEventHandlerExtensions.GetHandlers*
  nameWithType.vb: AsyncEventHandlerExtensions.GetHandlers(Of TEventArgs)(AsyncEventHandler(Of TEventArgs))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: MongoDB.Entities.AsyncEventHandlerExtensions.GetHandlers(Of TEventArgs)(MongoDB.Entities.AsyncEventHandler(Of TEventArgs))
  name.vb: GetHandlers(Of TEventArgs)(AsyncEventHandler(Of TEventArgs))
- uid: MongoDB.Entities.AsyncEventHandlerExtensions.InvokeAllAsync``1(MongoDB.Entities.AsyncEventHandler{``0},``0)
  commentId: M:MongoDB.Entities.AsyncEventHandlerExtensions.InvokeAllAsync``1(MongoDB.Entities.AsyncEventHandler{``0},``0)
  id: InvokeAllAsync``1(MongoDB.Entities.AsyncEventHandler{``0},``0)
  isExtensionMethod: true
  parent: MongoDB.Entities.AsyncEventHandlerExtensions
  langs:
  - csharp
  - vb
  name: InvokeAllAsync<TEventArgs>(AsyncEventHandler<TEventArgs>, TEventArgs)
  nameWithType: AsyncEventHandlerExtensions.InvokeAllAsync<TEventArgs>(AsyncEventHandler<TEventArgs>, TEventArgs)
  fullName: MongoDB.Entities.AsyncEventHandlerExtensions.InvokeAllAsync<TEventArgs>(MongoDB.Entities.AsyncEventHandler<TEventArgs>, TEventArgs)
  type: Method
  source:
    id: InvokeAllAsync
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\Watcher.cs
    startLine: 18
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  syntax:
    content: public static Task InvokeAllAsync<TEventArgs>(this AsyncEventHandler<TEventArgs> handler, TEventArgs args)
    parameters:
    - id: handler
      type: MongoDB.Entities.AsyncEventHandler{{TEventArgs}}
    - id: args
      type: '{TEventArgs}'
    typeParameters:
    - id: TEventArgs
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InvokeAllAsync(Of TEventArgs)(handler As AsyncEventHandler(Of TEventArgs), args As TEventArgs) As Task
  overload: MongoDB.Entities.AsyncEventHandlerExtensions.InvokeAllAsync*
  nameWithType.vb: AsyncEventHandlerExtensions.InvokeAllAsync(Of TEventArgs)(AsyncEventHandler(Of TEventArgs), TEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: MongoDB.Entities.AsyncEventHandlerExtensions.InvokeAllAsync(Of TEventArgs)(MongoDB.Entities.AsyncEventHandler(Of TEventArgs), TEventArgs)
  name.vb: InvokeAllAsync(Of TEventArgs)(AsyncEventHandler(Of TEventArgs), TEventArgs)
references:
- uid: MongoDB.Entities
  commentId: N:MongoDB.Entities
  name: MongoDB.Entities
  nameWithType: MongoDB.Entities
  fullName: MongoDB.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MongoDB.Entities.AsyncEventHandlerExtensions.GetHandlers*
  commentId: Overload:MongoDB.Entities.AsyncEventHandlerExtensions.GetHandlers
  name: GetHandlers
  nameWithType: AsyncEventHandlerExtensions.GetHandlers
  fullName: MongoDB.Entities.AsyncEventHandlerExtensions.GetHandlers
- uid: MongoDB.Entities.AsyncEventHandler{{TEventArgs}}
  commentId: T:MongoDB.Entities.AsyncEventHandler{``0}
  parent: MongoDB.Entities
  definition: MongoDB.Entities.AsyncEventHandler`1
  name: AsyncEventHandler<TEventArgs>
  nameWithType: AsyncEventHandler<TEventArgs>
  fullName: MongoDB.Entities.AsyncEventHandler<TEventArgs>
  nameWithType.vb: AsyncEventHandler(Of TEventArgs)
  fullName.vb: MongoDB.Entities.AsyncEventHandler(Of TEventArgs)
  name.vb: AsyncEventHandler(Of TEventArgs)
  spec.csharp:
  - uid: MongoDB.Entities.AsyncEventHandler`1
    name: AsyncEventHandler
    nameWithType: AsyncEventHandler
    fullName: MongoDB.Entities.AsyncEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.AsyncEventHandler`1
    name: AsyncEventHandler
    nameWithType: AsyncEventHandler
    fullName: MongoDB.Entities.AsyncEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{MongoDB.Entities.AsyncEventHandler{{TEventArgs}}}
  commentId: T:System.Collections.Generic.IEnumerable{MongoDB.Entities.AsyncEventHandler{``0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AsyncEventHandler<TEventArgs>>
  nameWithType: IEnumerable<AsyncEventHandler<TEventArgs>>
  fullName: System.Collections.Generic.IEnumerable<MongoDB.Entities.AsyncEventHandler<TEventArgs>>
  nameWithType.vb: IEnumerable(Of AsyncEventHandler(Of TEventArgs))
  fullName.vb: System.Collections.Generic.IEnumerable(Of MongoDB.Entities.AsyncEventHandler(Of TEventArgs))
  name.vb: IEnumerable(Of AsyncEventHandler(Of TEventArgs))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MongoDB.Entities.AsyncEventHandler`1
    name: AsyncEventHandler
    nameWithType: AsyncEventHandler
    fullName: MongoDB.Entities.AsyncEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MongoDB.Entities.AsyncEventHandler`1
    name: AsyncEventHandler
    nameWithType: AsyncEventHandler
    fullName: MongoDB.Entities.AsyncEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.AsyncEventHandler`1
  commentId: T:MongoDB.Entities.AsyncEventHandler`1
  name: AsyncEventHandler<TEventArgs>
  nameWithType: AsyncEventHandler<TEventArgs>
  fullName: MongoDB.Entities.AsyncEventHandler<TEventArgs>
  nameWithType.vb: AsyncEventHandler(Of TEventArgs)
  fullName.vb: MongoDB.Entities.AsyncEventHandler(Of TEventArgs)
  name.vb: AsyncEventHandler(Of TEventArgs)
  spec.csharp:
  - uid: MongoDB.Entities.AsyncEventHandler`1
    name: AsyncEventHandler
    nameWithType: AsyncEventHandler
    fullName: MongoDB.Entities.AsyncEventHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.AsyncEventHandler`1
    name: AsyncEventHandler
    nameWithType: AsyncEventHandler
    fullName: MongoDB.Entities.AsyncEventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: MongoDB.Entities.AsyncEventHandlerExtensions.InvokeAllAsync*
  commentId: Overload:MongoDB.Entities.AsyncEventHandlerExtensions.InvokeAllAsync
  name: InvokeAllAsync
  nameWithType: AsyncEventHandlerExtensions.InvokeAllAsync
  fullName: MongoDB.Entities.AsyncEventHandlerExtensions.InvokeAllAsync
- uid: '{TEventArgs}'
  commentId: '!:TEventArgs'
  definition: TEventArgs
  name: TEventArgs
  nameWithType: TEventArgs
  fullName: TEventArgs
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: TEventArgs
  name: TEventArgs
  nameWithType: TEventArgs
  fullName: TEventArgs
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
