### YamlMime:ManagedReference
items:
- uid: MongoDB.Entities.CollectionAttribute
  commentId: T:MongoDB.Entities.CollectionAttribute
  id: CollectionAttribute
  parent: MongoDB.Entities
  children:
  - MongoDB.Entities.CollectionAttribute.#ctor(System.String)
  - MongoDB.Entities.CollectionAttribute.Name
  langs:
  - csharp
  - vb
  name: CollectionAttribute
  nameWithType: CollectionAttribute
  fullName: MongoDB.Entities.CollectionAttribute
  type: Class
  source:
    id: CollectionAttribute
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\Attributes.cs
    startLine: 48
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  summary: "\nUse this attribute to specify a custom MongoDB collection name for an IEntity.\n"
  example: []
  syntax:
    content: 'public class CollectionAttribute : Attribute'
    content.vb: >-
      Public Class CollectionAttribute

          Inherits Attribute
  inheritance:
  - System.Object
  derivedClasses:
  - MongoDB.Entities.NameAttribute
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MongoDB.Entities.CollectionAttribute.Name
  commentId: P:MongoDB.Entities.CollectionAttribute.Name
  id: Name
  parent: MongoDB.Entities.CollectionAttribute
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CollectionAttribute.Name
  fullName: MongoDB.Entities.CollectionAttribute.Name
  type: Property
  source:
    id: Name
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\Attributes.cs
    startLine: 51
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: MongoDB.Entities.CollectionAttribute.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MongoDB.Entities.CollectionAttribute.#ctor(System.String)
  commentId: M:MongoDB.Entities.CollectionAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: MongoDB.Entities.CollectionAttribute
  langs:
  - csharp
  - vb
  name: CollectionAttribute(String)
  nameWithType: CollectionAttribute.CollectionAttribute(String)
  fullName: MongoDB.Entities.CollectionAttribute.CollectionAttribute(System.String)
  type: Constructor
  source:
    id: .ctor
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\Attributes.cs
    startLine: 57
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  summary: "\nUse this attribute to specify a custom MongoDB collection name for an IEntity.\n"
  example: []
  syntax:
    content: public CollectionAttribute(string name)
    parameters:
    - id: name
      type: System.String
      description: The name you want to use for the collection
    content.vb: Public Sub New(name As String)
  overload: MongoDB.Entities.CollectionAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: MongoDB.Entities
  commentId: N:MongoDB.Entities
  name: MongoDB.Entities
  nameWithType: MongoDB.Entities
  fullName: MongoDB.Entities
- uid: MongoDB.Entities.CollectionAttribute.Name*
  commentId: Overload:MongoDB.Entities.CollectionAttribute.Name
  name: Name
  nameWithType: CollectionAttribute.Name
  fullName: MongoDB.Entities.CollectionAttribute.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: MongoDB.Entities.CollectionAttribute.#ctor*
  commentId: Overload:MongoDB.Entities.CollectionAttribute.#ctor
  name: CollectionAttribute
  nameWithType: CollectionAttribute.CollectionAttribute
  fullName: MongoDB.Entities.CollectionAttribute.CollectionAttribute
