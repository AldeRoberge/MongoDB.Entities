### YamlMime:ManagedReference
items:
- uid: MongoDB.Entities.UpdateAndGet`1
  commentId: T:MongoDB.Entities.UpdateAndGet`1
  id: UpdateAndGet`1
  parent: MongoDB.Entities
  children: []
  langs:
  - csharp
  - vb
  name: UpdateAndGet<T>
  nameWithType: UpdateAndGet<T>
  fullName: MongoDB.Entities.UpdateAndGet<T>
  type: Class
  source:
    id: UpdateAndGet
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Builders\UpdateAndGet.cs
    startLine: 16
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  summary: "\nUpdate and retrieve the first document that was updated.\n<p>TIP: Specify a filter first with the .Match(). Then set property values with .Modify() and finally call .Execute() to run the command.</p>\n"
  example: []
  syntax:
    content: 'public class UpdateAndGet<T> : UpdateAndGet<T, T> where T : IEntity'
    typeParameters:
    - id: T
      description: Any class that implements IEntity
    content.vb: >-
      Public Class UpdateAndGet(Of T As IEntity)

          Inherits UpdateAndGet(Of T, T)
  inheritance:
  - System.Object
  - MongoDB.Entities.UpdateBase{{T}}
  - MongoDB.Entities.UpdateAndGet{{T},{T}}
  inheritedMembers:
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.MatchID(System.String)
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.Match(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}})
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.Match(System.Func{MongoDB.Driver.FilterDefinitionBuilder{{T}},MongoDB.Driver.FilterDefinition{{T}}})
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.Match(MongoDB.Entities.Template)
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.Match(MongoDB.Entities.Search,System.String,System.Boolean,System.Boolean,System.String)
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.Match(System.Linq.Expressions.Expression{System.Func{{T},System.Object}},MongoDB.Entities.Coordinates2D,System.Nullable{System.Double},System.Nullable{System.Double})
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.MatchString(System.String)
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.MatchExpression(System.String)
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.MatchExpression(MongoDB.Entities.Template)
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.Modify``1(System.Linq.Expressions.Expression{System.Func{{T},{TProp}}},{TProp})
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.Modify(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{{T}},MongoDB.Driver.UpdateDefinition{{T}}})
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.Modify(System.String)
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.Modify(MongoDB.Entities.Template)
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.ModifyWith({T})
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.ModifyOnly(System.Linq.Expressions.Expression{System.Func{{T},System.Object}},{T})
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.ModifyExcept(System.Linq.Expressions.Expression{System.Func{{T},System.Object}},{T})
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.WithPipeline(MongoDB.Entities.Template)
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.WithPipelineStage(System.String)
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.WithPipelineStage(MongoDB.Entities.Template)
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.WithArrayFilter(System.String)
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.WithArrayFilter(MongoDB.Entities.Template)
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.WithArrayFilters(MongoDB.Entities.Template)
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.Option(System.Action{MongoDB.Driver.FindOneAndUpdateOptions{{T},{T}}})
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.Project(System.Linq.Expressions.Expression{System.Func{{T},{T}}})
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.Project(System.Func{MongoDB.Driver.ProjectionDefinitionBuilder{{T}},MongoDB.Driver.ProjectionDefinition{{T},{T}}})
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.IgnoreGlobalFilters
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.ExecuteAsync(System.Threading.CancellationToken)
  - MongoDB.Entities.UpdateAndGet{{T},{T}}.ExecutePipelineAsync(System.Threading.CancellationToken)
  - MongoDB.Entities.UpdateBase{{T}}.defs
  - MongoDB.Entities.UpdateBase{{T}}.AddModification``1(System.Linq.Expressions.Expression{System.Func{{T},{TProp}}},{TProp})
  - MongoDB.Entities.UpdateBase{{T}}.AddModification(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{{T}},MongoDB.Driver.UpdateDefinition{{T}}})
  - MongoDB.Entities.UpdateBase{{T}}.AddModification(System.String)
  - MongoDB.Entities.UpdateBase{{T}}.AddModification(MongoDB.Entities.Template)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: UpdateAndGet(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T)
  name.vb: UpdateAndGet(Of T)
references:
- uid: MongoDB.Entities
  commentId: N:MongoDB.Entities
  name: MongoDB.Entities
  nameWithType: MongoDB.Entities
  fullName: MongoDB.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MongoDB.Entities.UpdateBase{{T}}
  commentId: T:MongoDB.Entities.UpdateBase{`0}
  parent: MongoDB.Entities
  definition: MongoDB.Entities.UpdateBase`1
  name: UpdateBase<T>
  nameWithType: UpdateBase<T>
  fullName: MongoDB.Entities.UpdateBase<T>
  nameWithType.vb: UpdateBase(Of T)
  fullName.vb: MongoDB.Entities.UpdateBase(Of T)
  name.vb: UpdateBase(Of T)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateBase`1
    name: UpdateBase
    nameWithType: UpdateBase
    fullName: MongoDB.Entities.UpdateBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.UpdateBase`1
    name: UpdateBase
    nameWithType: UpdateBase
    fullName: MongoDB.Entities.UpdateBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}
  commentId: T:MongoDB.Entities.UpdateAndGet{`0,`0}
  parent: MongoDB.Entities
  definition: MongoDB.Entities.UpdateAndGet`2
  name: UpdateAndGet<T, T>
  nameWithType: UpdateAndGet<T, T>
  fullName: MongoDB.Entities.UpdateAndGet<T, T>
  nameWithType.vb: UpdateAndGet(Of T, T)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T)
  name.vb: UpdateAndGet(Of T, T)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2
    name: UpdateAndGet
    nameWithType: UpdateAndGet
    fullName: MongoDB.Entities.UpdateAndGet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2
    name: UpdateAndGet
    nameWithType: UpdateAndGet
    fullName: MongoDB.Entities.UpdateAndGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.MatchID(System.String)
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.MatchID(System.String)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.MatchID(System.String)
  name: MatchID(String)
  nameWithType: UpdateAndGet<T, T>.MatchID(String)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.MatchID(System.String)
  nameWithType.vb: UpdateAndGet(Of T, T).MatchID(String)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).MatchID(System.String)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.MatchID(System.String)
    name: MatchID
    nameWithType: UpdateAndGet<T, T>.MatchID
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.MatchID
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.MatchID(System.String)
    name: MatchID
    nameWithType: UpdateAndGet(Of T, T).MatchID
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).MatchID
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.Match(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}})
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.Match(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.Match(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: Match(Expression<Func<T, Boolean>>)
  nameWithType: UpdateAndGet<T, T>.Match(Expression<Func<T, Boolean>>)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.Match(System.Linq.Expressions.Expression<System.Func<T, System.Boolean>>)
  nameWithType.vb: UpdateAndGet(Of T, T).Match(Expression(Of Func(Of T, Boolean)))
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).Match(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Boolean)))
  name.vb: Match(Expression(Of Func(Of T, Boolean)))
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: Match
    nameWithType: UpdateAndGet<T, T>.Match
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: Match
    nameWithType: UpdateAndGet(Of T, T).Match
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.Match(System.Func{MongoDB.Driver.FilterDefinitionBuilder{{T}},MongoDB.Driver.FilterDefinition{{T}}})
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.Match(System.Func{MongoDB.Driver.FilterDefinitionBuilder{`0},MongoDB.Driver.FilterDefinition{`0}})
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.Match(System.Func{MongoDB.Driver.FilterDefinitionBuilder{`0},MongoDB.Driver.FilterDefinition{`0}})
  name: Match(Func<FilterDefinitionBuilder<T>, FilterDefinition<T>>)
  nameWithType: UpdateAndGet<T, T>.Match(Func<FilterDefinitionBuilder<T>, FilterDefinition<T>>)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.Match(System.Func<MongoDB.Driver.FilterDefinitionBuilder<T>, MongoDB.Driver.FilterDefinition<T>>)
  nameWithType.vb: UpdateAndGet(Of T, T).Match(Func(Of FilterDefinitionBuilder(Of T), FilterDefinition(Of T)))
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).Match(System.Func(Of MongoDB.Driver.FilterDefinitionBuilder(Of T), MongoDB.Driver.FilterDefinition(Of T)))
  name.vb: Match(Func(Of FilterDefinitionBuilder(Of T), FilterDefinition(Of T)))
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(System.Func{MongoDB.Driver.FilterDefinitionBuilder{`0},MongoDB.Driver.FilterDefinition{`0}})
    name: Match
    nameWithType: UpdateAndGet<T, T>.Match
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MongoDB.Driver.FilterDefinitionBuilder`1
    name: FilterDefinitionBuilder
    nameWithType: FilterDefinitionBuilder
    fullName: MongoDB.Driver.FilterDefinitionBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.FilterDefinition`1
    name: FilterDefinition
    nameWithType: FilterDefinition
    fullName: MongoDB.Driver.FilterDefinition
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(System.Func{MongoDB.Driver.FilterDefinitionBuilder{`0},MongoDB.Driver.FilterDefinition{`0}})
    name: Match
    nameWithType: UpdateAndGet(Of T, T).Match
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MongoDB.Driver.FilterDefinitionBuilder`1
    name: FilterDefinitionBuilder
    nameWithType: FilterDefinitionBuilder
    fullName: MongoDB.Driver.FilterDefinitionBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.FilterDefinition`1
    name: FilterDefinition
    nameWithType: FilterDefinition
    fullName: MongoDB.Driver.FilterDefinition
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.Match(MongoDB.Entities.Template)
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.Match(MongoDB.Entities.Template)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.Match(MongoDB.Entities.Template)
  name: Match(Template)
  nameWithType: UpdateAndGet<T, T>.Match(Template)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.Match(MongoDB.Entities.Template)
  nameWithType.vb: UpdateAndGet(Of T, T).Match(Template)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).Match(MongoDB.Entities.Template)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(MongoDB.Entities.Template)
    name: Match
    nameWithType: UpdateAndGet<T, T>.Match
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(MongoDB.Entities.Template)
    name: Match
    nameWithType: UpdateAndGet(Of T, T).Match
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.Match(MongoDB.Entities.Search,System.String,System.Boolean,System.Boolean,System.String)
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.Match(MongoDB.Entities.Search,System.String,System.Boolean,System.Boolean,System.String)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.Match(MongoDB.Entities.Search,System.String,System.Boolean,System.Boolean,System.String)
  name: Match(Search, String, Boolean, Boolean, String)
  nameWithType: UpdateAndGet<T, T>.Match(Search, String, Boolean, Boolean, String)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.Match(MongoDB.Entities.Search, System.String, System.Boolean, System.Boolean, System.String)
  nameWithType.vb: UpdateAndGet(Of T, T).Match(Search, String, Boolean, Boolean, String)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).Match(MongoDB.Entities.Search, System.String, System.Boolean, System.Boolean, System.String)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(MongoDB.Entities.Search,System.String,System.Boolean,System.Boolean,System.String)
    name: Match
    nameWithType: UpdateAndGet<T, T>.Match
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Search
    name: Search
    nameWithType: Search
    fullName: MongoDB.Entities.Search
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(MongoDB.Entities.Search,System.String,System.Boolean,System.Boolean,System.String)
    name: Match
    nameWithType: UpdateAndGet(Of T, T).Match
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Search
    name: Search
    nameWithType: Search
    fullName: MongoDB.Entities.Search
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.Match(System.Linq.Expressions.Expression{System.Func{{T},System.Object}},MongoDB.Entities.Coordinates2D,System.Nullable{System.Double},System.Nullable{System.Double})
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.Match(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Entities.Coordinates2D,System.Nullable{System.Double},System.Nullable{System.Double})
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.Match(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Entities.Coordinates2D,System.Nullable{System.Double},System.Nullable{System.Double})
  name: Match(Expression<Func<T, Object>>, Coordinates2D, Nullable<Double>, Nullable<Double>)
  nameWithType: UpdateAndGet<T, T>.Match(Expression<Func<T, Object>>, Coordinates2D, Nullable<Double>, Nullable<Double>)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.Match(System.Linq.Expressions.Expression<System.Func<T, System.Object>>, MongoDB.Entities.Coordinates2D, System.Nullable<System.Double>, System.Nullable<System.Double>)
  nameWithType.vb: UpdateAndGet(Of T, T).Match(Expression(Of Func(Of T, Object)), Coordinates2D, Nullable(Of Double), Nullable(Of Double))
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).Match(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object)), MongoDB.Entities.Coordinates2D, System.Nullable(Of System.Double), System.Nullable(Of System.Double))
  name.vb: Match(Expression(Of Func(Of T, Object)), Coordinates2D, Nullable(Of Double), Nullable(Of Double))
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Entities.Coordinates2D,System.Nullable{System.Double},System.Nullable{System.Double})
    name: Match
    nameWithType: UpdateAndGet<T, T>.Match
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Entities.Coordinates2D
    name: Coordinates2D
    nameWithType: Coordinates2D
    fullName: MongoDB.Entities.Coordinates2D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Entities.Coordinates2D,System.Nullable{System.Double},System.Nullable{System.Double})
    name: Match
    nameWithType: UpdateAndGet(Of T, T).Match
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Entities.Coordinates2D
    name: Coordinates2D
    nameWithType: Coordinates2D
    fullName: MongoDB.Entities.Coordinates2D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.MatchString(System.String)
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.MatchString(System.String)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.MatchString(System.String)
  name: MatchString(String)
  nameWithType: UpdateAndGet<T, T>.MatchString(String)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.MatchString(System.String)
  nameWithType.vb: UpdateAndGet(Of T, T).MatchString(String)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).MatchString(System.String)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.MatchString(System.String)
    name: MatchString
    nameWithType: UpdateAndGet<T, T>.MatchString
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.MatchString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.MatchString(System.String)
    name: MatchString
    nameWithType: UpdateAndGet(Of T, T).MatchString
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).MatchString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.MatchExpression(System.String)
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.MatchExpression(System.String)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.MatchExpression(System.String)
  name: MatchExpression(String)
  nameWithType: UpdateAndGet<T, T>.MatchExpression(String)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.MatchExpression(System.String)
  nameWithType.vb: UpdateAndGet(Of T, T).MatchExpression(String)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).MatchExpression(System.String)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.MatchExpression(System.String)
    name: MatchExpression
    nameWithType: UpdateAndGet<T, T>.MatchExpression
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.MatchExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.MatchExpression(System.String)
    name: MatchExpression
    nameWithType: UpdateAndGet(Of T, T).MatchExpression
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).MatchExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.MatchExpression(MongoDB.Entities.Template)
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.MatchExpression(MongoDB.Entities.Template)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.MatchExpression(MongoDB.Entities.Template)
  name: MatchExpression(Template)
  nameWithType: UpdateAndGet<T, T>.MatchExpression(Template)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.MatchExpression(MongoDB.Entities.Template)
  nameWithType.vb: UpdateAndGet(Of T, T).MatchExpression(Template)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).MatchExpression(MongoDB.Entities.Template)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.MatchExpression(MongoDB.Entities.Template)
    name: MatchExpression
    nameWithType: UpdateAndGet<T, T>.MatchExpression
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.MatchExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.MatchExpression(MongoDB.Entities.Template)
    name: MatchExpression
    nameWithType: UpdateAndGet(Of T, T).MatchExpression
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).MatchExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.Modify``1(System.Linq.Expressions.Expression{System.Func{{T},{TProp}}},{TProp})
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.Modify``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.Modify``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)
  name: Modify<TProp>(Expression<Func<T, TProp>>, TProp)
  nameWithType: UpdateAndGet<T, T>.Modify<TProp>(Expression<Func<T, TProp>>, TProp)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.Modify<TProp>(System.Linq.Expressions.Expression<System.Func<T, TProp>>, TProp)
  nameWithType.vb: UpdateAndGet(Of T, T).Modify(Of TProp)(Expression(Of Func(Of T, TProp)), TProp)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).Modify(Of TProp)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProp)), TProp)
  name.vb: Modify(Of TProp)(Expression(Of Func(Of T, TProp)), TProp)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Modify``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)
    name: Modify<TProp>
    nameWithType: UpdateAndGet<T, T>.Modify<TProp>
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.Modify<TProp>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Modify``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)
    name: Modify(Of TProp)
    nameWithType: UpdateAndGet(Of T, T).Modify(Of TProp)
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).Modify(Of TProp)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.Modify(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{{T}},MongoDB.Driver.UpdateDefinition{{T}}})
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.Modify(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{`0},MongoDB.Driver.UpdateDefinition{`0}})
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.Modify(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{`0},MongoDB.Driver.UpdateDefinition{`0}})
  name: Modify(Func<UpdateDefinitionBuilder<T>, UpdateDefinition<T>>)
  nameWithType: UpdateAndGet<T, T>.Modify(Func<UpdateDefinitionBuilder<T>, UpdateDefinition<T>>)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.Modify(System.Func<MongoDB.Driver.UpdateDefinitionBuilder<T>, MongoDB.Driver.UpdateDefinition<T>>)
  nameWithType.vb: UpdateAndGet(Of T, T).Modify(Func(Of UpdateDefinitionBuilder(Of T), UpdateDefinition(Of T)))
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).Modify(System.Func(Of MongoDB.Driver.UpdateDefinitionBuilder(Of T), MongoDB.Driver.UpdateDefinition(Of T)))
  name.vb: Modify(Func(Of UpdateDefinitionBuilder(Of T), UpdateDefinition(Of T)))
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Modify(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{`0},MongoDB.Driver.UpdateDefinition{`0}})
    name: Modify
    nameWithType: UpdateAndGet<T, T>.Modify
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MongoDB.Driver.UpdateDefinitionBuilder`1
    name: UpdateDefinitionBuilder
    nameWithType: UpdateDefinitionBuilder
    fullName: MongoDB.Driver.UpdateDefinitionBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.UpdateDefinition`1
    name: UpdateDefinition
    nameWithType: UpdateDefinition
    fullName: MongoDB.Driver.UpdateDefinition
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Modify(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{`0},MongoDB.Driver.UpdateDefinition{`0}})
    name: Modify
    nameWithType: UpdateAndGet(Of T, T).Modify
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MongoDB.Driver.UpdateDefinitionBuilder`1
    name: UpdateDefinitionBuilder
    nameWithType: UpdateDefinitionBuilder
    fullName: MongoDB.Driver.UpdateDefinitionBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.UpdateDefinition`1
    name: UpdateDefinition
    nameWithType: UpdateDefinition
    fullName: MongoDB.Driver.UpdateDefinition
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.Modify(System.String)
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.Modify(System.String)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.Modify(System.String)
  name: Modify(String)
  nameWithType: UpdateAndGet<T, T>.Modify(String)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.Modify(System.String)
  nameWithType.vb: UpdateAndGet(Of T, T).Modify(String)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).Modify(System.String)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Modify(System.String)
    name: Modify
    nameWithType: UpdateAndGet<T, T>.Modify
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Modify(System.String)
    name: Modify
    nameWithType: UpdateAndGet(Of T, T).Modify
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.Modify(MongoDB.Entities.Template)
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.Modify(MongoDB.Entities.Template)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.Modify(MongoDB.Entities.Template)
  name: Modify(Template)
  nameWithType: UpdateAndGet<T, T>.Modify(Template)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.Modify(MongoDB.Entities.Template)
  nameWithType.vb: UpdateAndGet(Of T, T).Modify(Template)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).Modify(MongoDB.Entities.Template)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Modify(MongoDB.Entities.Template)
    name: Modify
    nameWithType: UpdateAndGet<T, T>.Modify
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Modify(MongoDB.Entities.Template)
    name: Modify
    nameWithType: UpdateAndGet(Of T, T).Modify
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.ModifyWith({T})
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.ModifyWith(`0)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.ModifyWith(`0)
  name: ModifyWith(T)
  nameWithType: UpdateAndGet<T, T>.ModifyWith(T)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.ModifyWith(T)
  nameWithType.vb: UpdateAndGet(Of T, T).ModifyWith(T)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).ModifyWith(T)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.ModifyWith(`0)
    name: ModifyWith
    nameWithType: UpdateAndGet<T, T>.ModifyWith
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.ModifyWith
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.ModifyWith(`0)
    name: ModifyWith
    nameWithType: UpdateAndGet(Of T, T).ModifyWith
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).ModifyWith
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.ModifyOnly(System.Linq.Expressions.Expression{System.Func{{T},System.Object}},{T})
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.ModifyOnly(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},`0)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.ModifyOnly(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},`0)
  name: ModifyOnly(Expression<Func<T, Object>>, T)
  nameWithType: UpdateAndGet<T, T>.ModifyOnly(Expression<Func<T, Object>>, T)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.ModifyOnly(System.Linq.Expressions.Expression<System.Func<T, System.Object>>, T)
  nameWithType.vb: UpdateAndGet(Of T, T).ModifyOnly(Expression(Of Func(Of T, Object)), T)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).ModifyOnly(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object)), T)
  name.vb: ModifyOnly(Expression(Of Func(Of T, Object)), T)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.ModifyOnly(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},`0)
    name: ModifyOnly
    nameWithType: UpdateAndGet<T, T>.ModifyOnly
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.ModifyOnly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.ModifyOnly(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},`0)
    name: ModifyOnly
    nameWithType: UpdateAndGet(Of T, T).ModifyOnly
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).ModifyOnly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.ModifyExcept(System.Linq.Expressions.Expression{System.Func{{T},System.Object}},{T})
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.ModifyExcept(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},`0)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.ModifyExcept(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},`0)
  name: ModifyExcept(Expression<Func<T, Object>>, T)
  nameWithType: UpdateAndGet<T, T>.ModifyExcept(Expression<Func<T, Object>>, T)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.ModifyExcept(System.Linq.Expressions.Expression<System.Func<T, System.Object>>, T)
  nameWithType.vb: UpdateAndGet(Of T, T).ModifyExcept(Expression(Of Func(Of T, Object)), T)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).ModifyExcept(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object)), T)
  name.vb: ModifyExcept(Expression(Of Func(Of T, Object)), T)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.ModifyExcept(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},`0)
    name: ModifyExcept
    nameWithType: UpdateAndGet<T, T>.ModifyExcept
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.ModifyExcept
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.ModifyExcept(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},`0)
    name: ModifyExcept
    nameWithType: UpdateAndGet(Of T, T).ModifyExcept
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).ModifyExcept
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.WithPipeline(MongoDB.Entities.Template)
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.WithPipeline(MongoDB.Entities.Template)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.WithPipeline(MongoDB.Entities.Template)
  name: WithPipeline(Template)
  nameWithType: UpdateAndGet<T, T>.WithPipeline(Template)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.WithPipeline(MongoDB.Entities.Template)
  nameWithType.vb: UpdateAndGet(Of T, T).WithPipeline(Template)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).WithPipeline(MongoDB.Entities.Template)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithPipeline(MongoDB.Entities.Template)
    name: WithPipeline
    nameWithType: UpdateAndGet<T, T>.WithPipeline
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.WithPipeline
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithPipeline(MongoDB.Entities.Template)
    name: WithPipeline
    nameWithType: UpdateAndGet(Of T, T).WithPipeline
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).WithPipeline
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.WithPipelineStage(System.String)
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.WithPipelineStage(System.String)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.WithPipelineStage(System.String)
  name: WithPipelineStage(String)
  nameWithType: UpdateAndGet<T, T>.WithPipelineStage(String)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.WithPipelineStage(System.String)
  nameWithType.vb: UpdateAndGet(Of T, T).WithPipelineStage(String)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).WithPipelineStage(System.String)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithPipelineStage(System.String)
    name: WithPipelineStage
    nameWithType: UpdateAndGet<T, T>.WithPipelineStage
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.WithPipelineStage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithPipelineStage(System.String)
    name: WithPipelineStage
    nameWithType: UpdateAndGet(Of T, T).WithPipelineStage
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).WithPipelineStage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.WithPipelineStage(MongoDB.Entities.Template)
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.WithPipelineStage(MongoDB.Entities.Template)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.WithPipelineStage(MongoDB.Entities.Template)
  name: WithPipelineStage(Template)
  nameWithType: UpdateAndGet<T, T>.WithPipelineStage(Template)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.WithPipelineStage(MongoDB.Entities.Template)
  nameWithType.vb: UpdateAndGet(Of T, T).WithPipelineStage(Template)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).WithPipelineStage(MongoDB.Entities.Template)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithPipelineStage(MongoDB.Entities.Template)
    name: WithPipelineStage
    nameWithType: UpdateAndGet<T, T>.WithPipelineStage
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.WithPipelineStage
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithPipelineStage(MongoDB.Entities.Template)
    name: WithPipelineStage
    nameWithType: UpdateAndGet(Of T, T).WithPipelineStage
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).WithPipelineStage
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.WithArrayFilter(System.String)
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.WithArrayFilter(System.String)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.WithArrayFilter(System.String)
  name: WithArrayFilter(String)
  nameWithType: UpdateAndGet<T, T>.WithArrayFilter(String)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.WithArrayFilter(System.String)
  nameWithType.vb: UpdateAndGet(Of T, T).WithArrayFilter(String)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).WithArrayFilter(System.String)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithArrayFilter(System.String)
    name: WithArrayFilter
    nameWithType: UpdateAndGet<T, T>.WithArrayFilter
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.WithArrayFilter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithArrayFilter(System.String)
    name: WithArrayFilter
    nameWithType: UpdateAndGet(Of T, T).WithArrayFilter
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).WithArrayFilter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.WithArrayFilter(MongoDB.Entities.Template)
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.WithArrayFilter(MongoDB.Entities.Template)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.WithArrayFilter(MongoDB.Entities.Template)
  name: WithArrayFilter(Template)
  nameWithType: UpdateAndGet<T, T>.WithArrayFilter(Template)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.WithArrayFilter(MongoDB.Entities.Template)
  nameWithType.vb: UpdateAndGet(Of T, T).WithArrayFilter(Template)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).WithArrayFilter(MongoDB.Entities.Template)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithArrayFilter(MongoDB.Entities.Template)
    name: WithArrayFilter
    nameWithType: UpdateAndGet<T, T>.WithArrayFilter
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.WithArrayFilter
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithArrayFilter(MongoDB.Entities.Template)
    name: WithArrayFilter
    nameWithType: UpdateAndGet(Of T, T).WithArrayFilter
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).WithArrayFilter
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.WithArrayFilters(MongoDB.Entities.Template)
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.WithArrayFilters(MongoDB.Entities.Template)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.WithArrayFilters(MongoDB.Entities.Template)
  name: WithArrayFilters(Template)
  nameWithType: UpdateAndGet<T, T>.WithArrayFilters(Template)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.WithArrayFilters(MongoDB.Entities.Template)
  nameWithType.vb: UpdateAndGet(Of T, T).WithArrayFilters(Template)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).WithArrayFilters(MongoDB.Entities.Template)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithArrayFilters(MongoDB.Entities.Template)
    name: WithArrayFilters
    nameWithType: UpdateAndGet<T, T>.WithArrayFilters
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.WithArrayFilters
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithArrayFilters(MongoDB.Entities.Template)
    name: WithArrayFilters
    nameWithType: UpdateAndGet(Of T, T).WithArrayFilters
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).WithArrayFilters
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.Option(System.Action{MongoDB.Driver.FindOneAndUpdateOptions{{T},{T}}})
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.Option(System.Action{MongoDB.Driver.FindOneAndUpdateOptions{`0,`0}})
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.Option(System.Action{MongoDB.Driver.FindOneAndUpdateOptions{`0,`1}})
  name: Option(Action<FindOneAndUpdateOptions<T, T>>)
  nameWithType: UpdateAndGet<T, T>.Option(Action<FindOneAndUpdateOptions<T, T>>)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.Option(System.Action<MongoDB.Driver.FindOneAndUpdateOptions<T, T>>)
  nameWithType.vb: UpdateAndGet(Of T, T).Option(Action(Of FindOneAndUpdateOptions(Of T, T)))
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).Option(System.Action(Of MongoDB.Driver.FindOneAndUpdateOptions(Of T, T)))
  name.vb: Option(Action(Of FindOneAndUpdateOptions(Of T, T)))
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Option(System.Action{MongoDB.Driver.FindOneAndUpdateOptions{`0,`1}})
    name: Option
    nameWithType: UpdateAndGet<T, T>.Option
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.Option
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MongoDB.Driver.FindOneAndUpdateOptions`2
    name: FindOneAndUpdateOptions
    nameWithType: FindOneAndUpdateOptions
    fullName: MongoDB.Driver.FindOneAndUpdateOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Option(System.Action{MongoDB.Driver.FindOneAndUpdateOptions{`0,`1}})
    name: Option
    nameWithType: UpdateAndGet(Of T, T).Option
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).Option
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MongoDB.Driver.FindOneAndUpdateOptions`2
    name: FindOneAndUpdateOptions
    nameWithType: FindOneAndUpdateOptions
    fullName: MongoDB.Driver.FindOneAndUpdateOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.Project(System.Linq.Expressions.Expression{System.Func{{T},{T}}})
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.Project(System.Linq.Expressions.Expression{System.Func{`0,`0}})
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.Project(System.Linq.Expressions.Expression{System.Func{`0,`1}})
  name: Project(Expression<Func<T, T>>)
  nameWithType: UpdateAndGet<T, T>.Project(Expression<Func<T, T>>)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.Project(System.Linq.Expressions.Expression<System.Func<T, T>>)
  nameWithType.vb: UpdateAndGet(Of T, T).Project(Expression(Of Func(Of T, T)))
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).Project(System.Linq.Expressions.Expression(Of System.Func(Of T, T)))
  name.vb: Project(Expression(Of Func(Of T, T)))
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Project(System.Linq.Expressions.Expression{System.Func{`0,`1}})
    name: Project
    nameWithType: UpdateAndGet<T, T>.Project
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.Project
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Project(System.Linq.Expressions.Expression{System.Func{`0,`1}})
    name: Project
    nameWithType: UpdateAndGet(Of T, T).Project
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).Project
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.Project(System.Func{MongoDB.Driver.ProjectionDefinitionBuilder{{T}},MongoDB.Driver.ProjectionDefinition{{T},{T}}})
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.Project(System.Func{MongoDB.Driver.ProjectionDefinitionBuilder{`0},MongoDB.Driver.ProjectionDefinition{`0,`0}})
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.Project(System.Func{MongoDB.Driver.ProjectionDefinitionBuilder{`0},MongoDB.Driver.ProjectionDefinition{`0,`1}})
  name: Project(Func<ProjectionDefinitionBuilder<T>, ProjectionDefinition<T, T>>)
  nameWithType: UpdateAndGet<T, T>.Project(Func<ProjectionDefinitionBuilder<T>, ProjectionDefinition<T, T>>)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.Project(System.Func<MongoDB.Driver.ProjectionDefinitionBuilder<T>, MongoDB.Driver.ProjectionDefinition<T, T>>)
  nameWithType.vb: UpdateAndGet(Of T, T).Project(Func(Of ProjectionDefinitionBuilder(Of T), ProjectionDefinition(Of T, T)))
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).Project(System.Func(Of MongoDB.Driver.ProjectionDefinitionBuilder(Of T), MongoDB.Driver.ProjectionDefinition(Of T, T)))
  name.vb: Project(Func(Of ProjectionDefinitionBuilder(Of T), ProjectionDefinition(Of T, T)))
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Project(System.Func{MongoDB.Driver.ProjectionDefinitionBuilder{`0},MongoDB.Driver.ProjectionDefinition{`0,`1}})
    name: Project
    nameWithType: UpdateAndGet<T, T>.Project
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.Project
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MongoDB.Driver.ProjectionDefinitionBuilder`1
    name: ProjectionDefinitionBuilder
    nameWithType: ProjectionDefinitionBuilder
    fullName: MongoDB.Driver.ProjectionDefinitionBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.ProjectionDefinition`2
    name: ProjectionDefinition
    nameWithType: ProjectionDefinition
    fullName: MongoDB.Driver.ProjectionDefinition
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Project(System.Func{MongoDB.Driver.ProjectionDefinitionBuilder{`0},MongoDB.Driver.ProjectionDefinition{`0,`1}})
    name: Project
    nameWithType: UpdateAndGet(Of T, T).Project
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).Project
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MongoDB.Driver.ProjectionDefinitionBuilder`1
    name: ProjectionDefinitionBuilder
    nameWithType: ProjectionDefinitionBuilder
    fullName: MongoDB.Driver.ProjectionDefinitionBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.ProjectionDefinition`2
    name: ProjectionDefinition
    nameWithType: ProjectionDefinition
    fullName: MongoDB.Driver.ProjectionDefinition
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.IgnoreGlobalFilters
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.IgnoreGlobalFilters
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.IgnoreGlobalFilters
  name: IgnoreGlobalFilters()
  nameWithType: UpdateAndGet<T, T>.IgnoreGlobalFilters()
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.IgnoreGlobalFilters()
  nameWithType.vb: UpdateAndGet(Of T, T).IgnoreGlobalFilters()
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).IgnoreGlobalFilters()
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.IgnoreGlobalFilters
    name: IgnoreGlobalFilters
    nameWithType: UpdateAndGet<T, T>.IgnoreGlobalFilters
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.IgnoreGlobalFilters
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.IgnoreGlobalFilters
    name: IgnoreGlobalFilters
    nameWithType: UpdateAndGet(Of T, T).IgnoreGlobalFilters
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).IgnoreGlobalFilters
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.ExecuteAsync(System.Threading.CancellationToken)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.ExecuteAsync(System.Threading.CancellationToken)
  name: ExecuteAsync(CancellationToken)
  nameWithType: UpdateAndGet<T, T>.ExecuteAsync(CancellationToken)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.ExecuteAsync(System.Threading.CancellationToken)
  nameWithType.vb: UpdateAndGet(Of T, T).ExecuteAsync(CancellationToken)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).ExecuteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: UpdateAndGet<T, T>.ExecuteAsync
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: UpdateAndGet(Of T, T).ExecuteAsync
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet{{T},{T}}.ExecutePipelineAsync(System.Threading.CancellationToken)
  commentId: M:MongoDB.Entities.UpdateAndGet{`0,`0}.ExecutePipelineAsync(System.Threading.CancellationToken)
  parent: MongoDB.Entities.UpdateAndGet{{T},{T}}
  definition: MongoDB.Entities.UpdateAndGet`2.ExecutePipelineAsync(System.Threading.CancellationToken)
  name: ExecutePipelineAsync(CancellationToken)
  nameWithType: UpdateAndGet<T, T>.ExecutePipelineAsync(CancellationToken)
  fullName: MongoDB.Entities.UpdateAndGet<T, T>.ExecutePipelineAsync(System.Threading.CancellationToken)
  nameWithType.vb: UpdateAndGet(Of T, T).ExecutePipelineAsync(CancellationToken)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, T).ExecutePipelineAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.ExecutePipelineAsync(System.Threading.CancellationToken)
    name: ExecutePipelineAsync
    nameWithType: UpdateAndGet<T, T>.ExecutePipelineAsync
    fullName: MongoDB.Entities.UpdateAndGet<T, T>.ExecutePipelineAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.ExecutePipelineAsync(System.Threading.CancellationToken)
    name: ExecutePipelineAsync
    nameWithType: UpdateAndGet(Of T, T).ExecutePipelineAsync
    fullName: MongoDB.Entities.UpdateAndGet(Of T, T).ExecutePipelineAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateBase{{T}}.defs
  commentId: F:MongoDB.Entities.UpdateBase{`0}.defs
  parent: MongoDB.Entities.UpdateBase{{T}}
  definition: MongoDB.Entities.UpdateBase`1.defs
  name: defs
  nameWithType: UpdateBase<T>.defs
  fullName: MongoDB.Entities.UpdateBase<T>.defs
  nameWithType.vb: UpdateBase(Of T).defs
  fullName.vb: MongoDB.Entities.UpdateBase(Of T).defs
- uid: MongoDB.Entities.UpdateBase{{T}}.AddModification``1(System.Linq.Expressions.Expression{System.Func{{T},{TProp}}},{TProp})
  commentId: M:MongoDB.Entities.UpdateBase{`0}.AddModification``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)
  parent: MongoDB.Entities.UpdateBase{{T}}
  definition: MongoDB.Entities.UpdateBase`1.AddModification``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)
  name: AddModification<TProp>(Expression<Func<T, TProp>>, TProp)
  nameWithType: UpdateBase<T>.AddModification<TProp>(Expression<Func<T, TProp>>, TProp)
  fullName: MongoDB.Entities.UpdateBase<T>.AddModification<TProp>(System.Linq.Expressions.Expression<System.Func<T, TProp>>, TProp)
  nameWithType.vb: UpdateBase(Of T).AddModification(Of TProp)(Expression(Of Func(Of T, TProp)), TProp)
  fullName.vb: MongoDB.Entities.UpdateBase(Of T).AddModification(Of TProp)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProp)), TProp)
  name.vb: AddModification(Of TProp)(Expression(Of Func(Of T, TProp)), TProp)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateBase`1.AddModification``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)
    name: AddModification<TProp>
    nameWithType: UpdateBase<T>.AddModification<TProp>
    fullName: MongoDB.Entities.UpdateBase<T>.AddModification<TProp>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateBase`1.AddModification``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)
    name: AddModification(Of TProp)
    nameWithType: UpdateBase(Of T).AddModification(Of TProp)
    fullName: MongoDB.Entities.UpdateBase(Of T).AddModification(Of TProp)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateBase{{T}}.AddModification(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{{T}},MongoDB.Driver.UpdateDefinition{{T}}})
  commentId: M:MongoDB.Entities.UpdateBase{`0}.AddModification(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{`0},MongoDB.Driver.UpdateDefinition{`0}})
  parent: MongoDB.Entities.UpdateBase{{T}}
  definition: MongoDB.Entities.UpdateBase`1.AddModification(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{`0},MongoDB.Driver.UpdateDefinition{`0}})
  name: AddModification(Func<UpdateDefinitionBuilder<T>, UpdateDefinition<T>>)
  nameWithType: UpdateBase<T>.AddModification(Func<UpdateDefinitionBuilder<T>, UpdateDefinition<T>>)
  fullName: MongoDB.Entities.UpdateBase<T>.AddModification(System.Func<MongoDB.Driver.UpdateDefinitionBuilder<T>, MongoDB.Driver.UpdateDefinition<T>>)
  nameWithType.vb: UpdateBase(Of T).AddModification(Func(Of UpdateDefinitionBuilder(Of T), UpdateDefinition(Of T)))
  fullName.vb: MongoDB.Entities.UpdateBase(Of T).AddModification(System.Func(Of MongoDB.Driver.UpdateDefinitionBuilder(Of T), MongoDB.Driver.UpdateDefinition(Of T)))
  name.vb: AddModification(Func(Of UpdateDefinitionBuilder(Of T), UpdateDefinition(Of T)))
  spec.csharp:
  - uid: MongoDB.Entities.UpdateBase`1.AddModification(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{`0},MongoDB.Driver.UpdateDefinition{`0}})
    name: AddModification
    nameWithType: UpdateBase<T>.AddModification
    fullName: MongoDB.Entities.UpdateBase<T>.AddModification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MongoDB.Driver.UpdateDefinitionBuilder`1
    name: UpdateDefinitionBuilder
    nameWithType: UpdateDefinitionBuilder
    fullName: MongoDB.Driver.UpdateDefinitionBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.UpdateDefinition`1
    name: UpdateDefinition
    nameWithType: UpdateDefinition
    fullName: MongoDB.Driver.UpdateDefinition
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateBase`1.AddModification(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{`0},MongoDB.Driver.UpdateDefinition{`0}})
    name: AddModification
    nameWithType: UpdateBase(Of T).AddModification
    fullName: MongoDB.Entities.UpdateBase(Of T).AddModification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MongoDB.Driver.UpdateDefinitionBuilder`1
    name: UpdateDefinitionBuilder
    nameWithType: UpdateDefinitionBuilder
    fullName: MongoDB.Driver.UpdateDefinitionBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.UpdateDefinition`1
    name: UpdateDefinition
    nameWithType: UpdateDefinition
    fullName: MongoDB.Driver.UpdateDefinition
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateBase{{T}}.AddModification(System.String)
  commentId: M:MongoDB.Entities.UpdateBase{`0}.AddModification(System.String)
  parent: MongoDB.Entities.UpdateBase{{T}}
  definition: MongoDB.Entities.UpdateBase`1.AddModification(System.String)
  name: AddModification(String)
  nameWithType: UpdateBase<T>.AddModification(String)
  fullName: MongoDB.Entities.UpdateBase<T>.AddModification(System.String)
  nameWithType.vb: UpdateBase(Of T).AddModification(String)
  fullName.vb: MongoDB.Entities.UpdateBase(Of T).AddModification(System.String)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateBase`1.AddModification(System.String)
    name: AddModification
    nameWithType: UpdateBase<T>.AddModification
    fullName: MongoDB.Entities.UpdateBase<T>.AddModification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateBase`1.AddModification(System.String)
    name: AddModification
    nameWithType: UpdateBase(Of T).AddModification
    fullName: MongoDB.Entities.UpdateBase(Of T).AddModification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateBase{{T}}.AddModification(MongoDB.Entities.Template)
  commentId: M:MongoDB.Entities.UpdateBase{`0}.AddModification(MongoDB.Entities.Template)
  parent: MongoDB.Entities.UpdateBase{{T}}
  definition: MongoDB.Entities.UpdateBase`1.AddModification(MongoDB.Entities.Template)
  name: AddModification(Template)
  nameWithType: UpdateBase<T>.AddModification(Template)
  fullName: MongoDB.Entities.UpdateBase<T>.AddModification(MongoDB.Entities.Template)
  nameWithType.vb: UpdateBase(Of T).AddModification(Template)
  fullName.vb: MongoDB.Entities.UpdateBase(Of T).AddModification(MongoDB.Entities.Template)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateBase`1.AddModification(MongoDB.Entities.Template)
    name: AddModification
    nameWithType: UpdateBase<T>.AddModification
    fullName: MongoDB.Entities.UpdateBase<T>.AddModification
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateBase`1.AddModification(MongoDB.Entities.Template)
    name: AddModification
    nameWithType: UpdateBase(Of T).AddModification
    fullName: MongoDB.Entities.UpdateBase(Of T).AddModification
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MongoDB.Entities.UpdateBase`1
  commentId: T:MongoDB.Entities.UpdateBase`1
  name: UpdateBase<T>
  nameWithType: UpdateBase<T>
  fullName: MongoDB.Entities.UpdateBase<T>
  nameWithType.vb: UpdateBase(Of T)
  fullName.vb: MongoDB.Entities.UpdateBase(Of T)
  name.vb: UpdateBase(Of T)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateBase`1
    name: UpdateBase
    nameWithType: UpdateBase
    fullName: MongoDB.Entities.UpdateBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.UpdateBase`1
    name: UpdateBase
    nameWithType: UpdateBase
    fullName: MongoDB.Entities.UpdateBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2
  commentId: T:MongoDB.Entities.UpdateAndGet`2
  parent: MongoDB.Entities
  name: UpdateAndGet<T, TProjection>
  nameWithType: UpdateAndGet<T, TProjection>
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>
  nameWithType.vb: UpdateAndGet(Of T, TProjection)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection)
  name.vb: UpdateAndGet(Of T, TProjection)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2
    name: UpdateAndGet
    nameWithType: UpdateAndGet
    fullName: MongoDB.Entities.UpdateAndGet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProjection
    nameWithType: TProjection
    fullName: TProjection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2
    name: UpdateAndGet
    nameWithType: UpdateAndGet
    fullName: MongoDB.Entities.UpdateAndGet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProjection
    nameWithType: TProjection
    fullName: TProjection
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.MatchID(System.String)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.MatchID(System.String)
  isExternal: true
  name: MatchID(String)
  nameWithType: UpdateAndGet<T, TProjection>.MatchID(String)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.MatchID(System.String)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).MatchID(String)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).MatchID(System.String)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.MatchID(System.String)
    name: MatchID
    nameWithType: UpdateAndGet<T, TProjection>.MatchID
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.MatchID
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.MatchID(System.String)
    name: MatchID
    nameWithType: UpdateAndGet(Of T, TProjection).MatchID
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).MatchID
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.Match(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:MongoDB.Entities.UpdateAndGet`2.Match(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  name: Match(Expression<Func<T, Boolean>>)
  nameWithType: UpdateAndGet<T, TProjection>.Match(Expression<Func<T, Boolean>>)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Match(System.Linq.Expressions.Expression<System.Func<T, System.Boolean>>)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).Match(Expression(Of Func(Of T, Boolean)))
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Match(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Boolean)))
  name.vb: Match(Expression(Of Func(Of T, Boolean)))
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: Match
    nameWithType: UpdateAndGet<T, TProjection>.Match
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: Match
    nameWithType: UpdateAndGet(Of T, TProjection).Match
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.Match(System.Func{MongoDB.Driver.FilterDefinitionBuilder{`0},MongoDB.Driver.FilterDefinition{`0}})
  commentId: M:MongoDB.Entities.UpdateAndGet`2.Match(System.Func{MongoDB.Driver.FilterDefinitionBuilder{`0},MongoDB.Driver.FilterDefinition{`0}})
  isExternal: true
  name: Match(Func<FilterDefinitionBuilder<T>, FilterDefinition<T>>)
  nameWithType: UpdateAndGet<T, TProjection>.Match(Func<FilterDefinitionBuilder<T>, FilterDefinition<T>>)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Match(System.Func<MongoDB.Driver.FilterDefinitionBuilder<T>, MongoDB.Driver.FilterDefinition<T>>)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).Match(Func(Of FilterDefinitionBuilder(Of T), FilterDefinition(Of T)))
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Match(System.Func(Of MongoDB.Driver.FilterDefinitionBuilder(Of T), MongoDB.Driver.FilterDefinition(Of T)))
  name.vb: Match(Func(Of FilterDefinitionBuilder(Of T), FilterDefinition(Of T)))
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(System.Func{MongoDB.Driver.FilterDefinitionBuilder{`0},MongoDB.Driver.FilterDefinition{`0}})
    name: Match
    nameWithType: UpdateAndGet<T, TProjection>.Match
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MongoDB.Driver.FilterDefinitionBuilder`1
    name: FilterDefinitionBuilder
    nameWithType: FilterDefinitionBuilder
    fullName: MongoDB.Driver.FilterDefinitionBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.FilterDefinition`1
    name: FilterDefinition
    nameWithType: FilterDefinition
    fullName: MongoDB.Driver.FilterDefinition
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(System.Func{MongoDB.Driver.FilterDefinitionBuilder{`0},MongoDB.Driver.FilterDefinition{`0}})
    name: Match
    nameWithType: UpdateAndGet(Of T, TProjection).Match
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MongoDB.Driver.FilterDefinitionBuilder`1
    name: FilterDefinitionBuilder
    nameWithType: FilterDefinitionBuilder
    fullName: MongoDB.Driver.FilterDefinitionBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.FilterDefinition`1
    name: FilterDefinition
    nameWithType: FilterDefinition
    fullName: MongoDB.Driver.FilterDefinition
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.Match(MongoDB.Entities.Template)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.Match(MongoDB.Entities.Template)
  name: Match(Template)
  nameWithType: UpdateAndGet<T, TProjection>.Match(Template)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Match(MongoDB.Entities.Template)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).Match(Template)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Match(MongoDB.Entities.Template)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(MongoDB.Entities.Template)
    name: Match
    nameWithType: UpdateAndGet<T, TProjection>.Match
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(MongoDB.Entities.Template)
    name: Match
    nameWithType: UpdateAndGet(Of T, TProjection).Match
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.Match(MongoDB.Entities.Search,System.String,System.Boolean,System.Boolean,System.String)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.Match(MongoDB.Entities.Search,System.String,System.Boolean,System.Boolean,System.String)
  isExternal: true
  name: Match(Search, String, Boolean, Boolean, String)
  nameWithType: UpdateAndGet<T, TProjection>.Match(Search, String, Boolean, Boolean, String)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Match(MongoDB.Entities.Search, System.String, System.Boolean, System.Boolean, System.String)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).Match(Search, String, Boolean, Boolean, String)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Match(MongoDB.Entities.Search, System.String, System.Boolean, System.Boolean, System.String)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(MongoDB.Entities.Search,System.String,System.Boolean,System.Boolean,System.String)
    name: Match
    nameWithType: UpdateAndGet<T, TProjection>.Match
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Search
    name: Search
    nameWithType: Search
    fullName: MongoDB.Entities.Search
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(MongoDB.Entities.Search,System.String,System.Boolean,System.Boolean,System.String)
    name: Match
    nameWithType: UpdateAndGet(Of T, TProjection).Match
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Search
    name: Search
    nameWithType: Search
    fullName: MongoDB.Entities.Search
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.Match(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Entities.Coordinates2D,System.Nullable{System.Double},System.Nullable{System.Double})
  commentId: M:MongoDB.Entities.UpdateAndGet`2.Match(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Entities.Coordinates2D,System.Nullable{System.Double},System.Nullable{System.Double})
  isExternal: true
  name: Match(Expression<Func<T, Object>>, Coordinates2D, Nullable<Double>, Nullable<Double>)
  nameWithType: UpdateAndGet<T, TProjection>.Match(Expression<Func<T, Object>>, Coordinates2D, Nullable<Double>, Nullable<Double>)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Match(System.Linq.Expressions.Expression<System.Func<T, System.Object>>, MongoDB.Entities.Coordinates2D, System.Nullable<System.Double>, System.Nullable<System.Double>)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).Match(Expression(Of Func(Of T, Object)), Coordinates2D, Nullable(Of Double), Nullable(Of Double))
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Match(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object)), MongoDB.Entities.Coordinates2D, System.Nullable(Of System.Double), System.Nullable(Of System.Double))
  name.vb: Match(Expression(Of Func(Of T, Object)), Coordinates2D, Nullable(Of Double), Nullable(Of Double))
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Entities.Coordinates2D,System.Nullable{System.Double},System.Nullable{System.Double})
    name: Match
    nameWithType: UpdateAndGet<T, TProjection>.Match
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Entities.Coordinates2D
    name: Coordinates2D
    nameWithType: Coordinates2D
    fullName: MongoDB.Entities.Coordinates2D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Match(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},MongoDB.Entities.Coordinates2D,System.Nullable{System.Double},System.Nullable{System.Double})
    name: Match
    nameWithType: UpdateAndGet(Of T, TProjection).Match
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Entities.Coordinates2D
    name: Coordinates2D
    nameWithType: Coordinates2D
    fullName: MongoDB.Entities.Coordinates2D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.MatchString(System.String)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.MatchString(System.String)
  isExternal: true
  name: MatchString(String)
  nameWithType: UpdateAndGet<T, TProjection>.MatchString(String)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.MatchString(System.String)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).MatchString(String)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).MatchString(System.String)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.MatchString(System.String)
    name: MatchString
    nameWithType: UpdateAndGet<T, TProjection>.MatchString
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.MatchString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.MatchString(System.String)
    name: MatchString
    nameWithType: UpdateAndGet(Of T, TProjection).MatchString
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).MatchString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.MatchExpression(System.String)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.MatchExpression(System.String)
  isExternal: true
  name: MatchExpression(String)
  nameWithType: UpdateAndGet<T, TProjection>.MatchExpression(String)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.MatchExpression(System.String)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).MatchExpression(String)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).MatchExpression(System.String)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.MatchExpression(System.String)
    name: MatchExpression
    nameWithType: UpdateAndGet<T, TProjection>.MatchExpression
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.MatchExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.MatchExpression(System.String)
    name: MatchExpression
    nameWithType: UpdateAndGet(Of T, TProjection).MatchExpression
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).MatchExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.MatchExpression(MongoDB.Entities.Template)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.MatchExpression(MongoDB.Entities.Template)
  name: MatchExpression(Template)
  nameWithType: UpdateAndGet<T, TProjection>.MatchExpression(Template)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.MatchExpression(MongoDB.Entities.Template)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).MatchExpression(Template)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).MatchExpression(MongoDB.Entities.Template)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.MatchExpression(MongoDB.Entities.Template)
    name: MatchExpression
    nameWithType: UpdateAndGet<T, TProjection>.MatchExpression
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.MatchExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.MatchExpression(MongoDB.Entities.Template)
    name: MatchExpression
    nameWithType: UpdateAndGet(Of T, TProjection).MatchExpression
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).MatchExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.Modify``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.Modify``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)
  isExternal: true
  name: Modify<TProp>(Expression<Func<T, TProp>>, TProp)
  nameWithType: UpdateAndGet<T, TProjection>.Modify<TProp>(Expression<Func<T, TProp>>, TProp)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Modify<TProp>(System.Linq.Expressions.Expression<System.Func<T, TProp>>, TProp)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).Modify(Of TProp)(Expression(Of Func(Of T, TProp)), TProp)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Modify(Of TProp)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProp)), TProp)
  name.vb: Modify(Of TProp)(Expression(Of Func(Of T, TProp)), TProp)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Modify``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)
    name: Modify<TProp>
    nameWithType: UpdateAndGet<T, TProjection>.Modify<TProp>
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Modify<TProp>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Modify``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)
    name: Modify(Of TProp)
    nameWithType: UpdateAndGet(Of T, TProjection).Modify(Of TProp)
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Modify(Of TProp)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.Modify(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{`0},MongoDB.Driver.UpdateDefinition{`0}})
  commentId: M:MongoDB.Entities.UpdateAndGet`2.Modify(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{`0},MongoDB.Driver.UpdateDefinition{`0}})
  isExternal: true
  name: Modify(Func<UpdateDefinitionBuilder<T>, UpdateDefinition<T>>)
  nameWithType: UpdateAndGet<T, TProjection>.Modify(Func<UpdateDefinitionBuilder<T>, UpdateDefinition<T>>)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Modify(System.Func<MongoDB.Driver.UpdateDefinitionBuilder<T>, MongoDB.Driver.UpdateDefinition<T>>)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).Modify(Func(Of UpdateDefinitionBuilder(Of T), UpdateDefinition(Of T)))
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Modify(System.Func(Of MongoDB.Driver.UpdateDefinitionBuilder(Of T), MongoDB.Driver.UpdateDefinition(Of T)))
  name.vb: Modify(Func(Of UpdateDefinitionBuilder(Of T), UpdateDefinition(Of T)))
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Modify(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{`0},MongoDB.Driver.UpdateDefinition{`0}})
    name: Modify
    nameWithType: UpdateAndGet<T, TProjection>.Modify
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MongoDB.Driver.UpdateDefinitionBuilder`1
    name: UpdateDefinitionBuilder
    nameWithType: UpdateDefinitionBuilder
    fullName: MongoDB.Driver.UpdateDefinitionBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.UpdateDefinition`1
    name: UpdateDefinition
    nameWithType: UpdateDefinition
    fullName: MongoDB.Driver.UpdateDefinition
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Modify(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{`0},MongoDB.Driver.UpdateDefinition{`0}})
    name: Modify
    nameWithType: UpdateAndGet(Of T, TProjection).Modify
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MongoDB.Driver.UpdateDefinitionBuilder`1
    name: UpdateDefinitionBuilder
    nameWithType: UpdateDefinitionBuilder
    fullName: MongoDB.Driver.UpdateDefinitionBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.UpdateDefinition`1
    name: UpdateDefinition
    nameWithType: UpdateDefinition
    fullName: MongoDB.Driver.UpdateDefinition
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.Modify(System.String)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.Modify(System.String)
  isExternal: true
  name: Modify(String)
  nameWithType: UpdateAndGet<T, TProjection>.Modify(String)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Modify(System.String)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).Modify(String)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Modify(System.String)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Modify(System.String)
    name: Modify
    nameWithType: UpdateAndGet<T, TProjection>.Modify
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Modify(System.String)
    name: Modify
    nameWithType: UpdateAndGet(Of T, TProjection).Modify
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.Modify(MongoDB.Entities.Template)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.Modify(MongoDB.Entities.Template)
  name: Modify(Template)
  nameWithType: UpdateAndGet<T, TProjection>.Modify(Template)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Modify(MongoDB.Entities.Template)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).Modify(Template)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Modify(MongoDB.Entities.Template)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Modify(MongoDB.Entities.Template)
    name: Modify
    nameWithType: UpdateAndGet<T, TProjection>.Modify
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Modify(MongoDB.Entities.Template)
    name: Modify
    nameWithType: UpdateAndGet(Of T, TProjection).Modify
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Modify
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.ModifyWith(`0)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.ModifyWith(`0)
  name: ModifyWith(T)
  nameWithType: UpdateAndGet<T, TProjection>.ModifyWith(T)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.ModifyWith(T)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).ModifyWith(T)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).ModifyWith(T)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.ModifyWith(`0)
    name: ModifyWith
    nameWithType: UpdateAndGet<T, TProjection>.ModifyWith
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.ModifyWith
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.ModifyWith(`0)
    name: ModifyWith
    nameWithType: UpdateAndGet(Of T, TProjection).ModifyWith
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).ModifyWith
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.ModifyOnly(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},`0)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.ModifyOnly(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},`0)
  isExternal: true
  name: ModifyOnly(Expression<Func<T, Object>>, T)
  nameWithType: UpdateAndGet<T, TProjection>.ModifyOnly(Expression<Func<T, Object>>, T)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.ModifyOnly(System.Linq.Expressions.Expression<System.Func<T, System.Object>>, T)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).ModifyOnly(Expression(Of Func(Of T, Object)), T)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).ModifyOnly(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object)), T)
  name.vb: ModifyOnly(Expression(Of Func(Of T, Object)), T)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.ModifyOnly(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},`0)
    name: ModifyOnly
    nameWithType: UpdateAndGet<T, TProjection>.ModifyOnly
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.ModifyOnly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.ModifyOnly(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},`0)
    name: ModifyOnly
    nameWithType: UpdateAndGet(Of T, TProjection).ModifyOnly
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).ModifyOnly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.ModifyExcept(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},`0)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.ModifyExcept(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},`0)
  isExternal: true
  name: ModifyExcept(Expression<Func<T, Object>>, T)
  nameWithType: UpdateAndGet<T, TProjection>.ModifyExcept(Expression<Func<T, Object>>, T)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.ModifyExcept(System.Linq.Expressions.Expression<System.Func<T, System.Object>>, T)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).ModifyExcept(Expression(Of Func(Of T, Object)), T)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).ModifyExcept(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object)), T)
  name.vb: ModifyExcept(Expression(Of Func(Of T, Object)), T)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.ModifyExcept(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},`0)
    name: ModifyExcept
    nameWithType: UpdateAndGet<T, TProjection>.ModifyExcept
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.ModifyExcept
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.ModifyExcept(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},`0)
    name: ModifyExcept
    nameWithType: UpdateAndGet(Of T, TProjection).ModifyExcept
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).ModifyExcept
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.WithPipeline(MongoDB.Entities.Template)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.WithPipeline(MongoDB.Entities.Template)
  name: WithPipeline(Template)
  nameWithType: UpdateAndGet<T, TProjection>.WithPipeline(Template)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.WithPipeline(MongoDB.Entities.Template)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).WithPipeline(Template)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).WithPipeline(MongoDB.Entities.Template)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithPipeline(MongoDB.Entities.Template)
    name: WithPipeline
    nameWithType: UpdateAndGet<T, TProjection>.WithPipeline
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.WithPipeline
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithPipeline(MongoDB.Entities.Template)
    name: WithPipeline
    nameWithType: UpdateAndGet(Of T, TProjection).WithPipeline
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).WithPipeline
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.WithPipelineStage(System.String)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.WithPipelineStage(System.String)
  isExternal: true
  name: WithPipelineStage(String)
  nameWithType: UpdateAndGet<T, TProjection>.WithPipelineStage(String)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.WithPipelineStage(System.String)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).WithPipelineStage(String)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).WithPipelineStage(System.String)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithPipelineStage(System.String)
    name: WithPipelineStage
    nameWithType: UpdateAndGet<T, TProjection>.WithPipelineStage
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.WithPipelineStage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithPipelineStage(System.String)
    name: WithPipelineStage
    nameWithType: UpdateAndGet(Of T, TProjection).WithPipelineStage
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).WithPipelineStage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.WithPipelineStage(MongoDB.Entities.Template)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.WithPipelineStage(MongoDB.Entities.Template)
  name: WithPipelineStage(Template)
  nameWithType: UpdateAndGet<T, TProjection>.WithPipelineStage(Template)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.WithPipelineStage(MongoDB.Entities.Template)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).WithPipelineStage(Template)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).WithPipelineStage(MongoDB.Entities.Template)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithPipelineStage(MongoDB.Entities.Template)
    name: WithPipelineStage
    nameWithType: UpdateAndGet<T, TProjection>.WithPipelineStage
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.WithPipelineStage
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithPipelineStage(MongoDB.Entities.Template)
    name: WithPipelineStage
    nameWithType: UpdateAndGet(Of T, TProjection).WithPipelineStage
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).WithPipelineStage
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.WithArrayFilter(System.String)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.WithArrayFilter(System.String)
  isExternal: true
  name: WithArrayFilter(String)
  nameWithType: UpdateAndGet<T, TProjection>.WithArrayFilter(String)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.WithArrayFilter(System.String)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).WithArrayFilter(String)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).WithArrayFilter(System.String)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithArrayFilter(System.String)
    name: WithArrayFilter
    nameWithType: UpdateAndGet<T, TProjection>.WithArrayFilter
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.WithArrayFilter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithArrayFilter(System.String)
    name: WithArrayFilter
    nameWithType: UpdateAndGet(Of T, TProjection).WithArrayFilter
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).WithArrayFilter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.WithArrayFilter(MongoDB.Entities.Template)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.WithArrayFilter(MongoDB.Entities.Template)
  name: WithArrayFilter(Template)
  nameWithType: UpdateAndGet<T, TProjection>.WithArrayFilter(Template)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.WithArrayFilter(MongoDB.Entities.Template)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).WithArrayFilter(Template)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).WithArrayFilter(MongoDB.Entities.Template)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithArrayFilter(MongoDB.Entities.Template)
    name: WithArrayFilter
    nameWithType: UpdateAndGet<T, TProjection>.WithArrayFilter
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.WithArrayFilter
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithArrayFilter(MongoDB.Entities.Template)
    name: WithArrayFilter
    nameWithType: UpdateAndGet(Of T, TProjection).WithArrayFilter
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).WithArrayFilter
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.WithArrayFilters(MongoDB.Entities.Template)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.WithArrayFilters(MongoDB.Entities.Template)
  name: WithArrayFilters(Template)
  nameWithType: UpdateAndGet<T, TProjection>.WithArrayFilters(Template)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.WithArrayFilters(MongoDB.Entities.Template)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).WithArrayFilters(Template)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).WithArrayFilters(MongoDB.Entities.Template)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithArrayFilters(MongoDB.Entities.Template)
    name: WithArrayFilters
    nameWithType: UpdateAndGet<T, TProjection>.WithArrayFilters
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.WithArrayFilters
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.WithArrayFilters(MongoDB.Entities.Template)
    name: WithArrayFilters
    nameWithType: UpdateAndGet(Of T, TProjection).WithArrayFilters
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).WithArrayFilters
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.Option(System.Action{MongoDB.Driver.FindOneAndUpdateOptions{`0,`1}})
  commentId: M:MongoDB.Entities.UpdateAndGet`2.Option(System.Action{MongoDB.Driver.FindOneAndUpdateOptions{`0,`1}})
  isExternal: true
  name: Option(Action<FindOneAndUpdateOptions<T, TProjection>>)
  nameWithType: UpdateAndGet<T, TProjection>.Option(Action<FindOneAndUpdateOptions<T, TProjection>>)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Option(System.Action<MongoDB.Driver.FindOneAndUpdateOptions<T, TProjection>>)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).Option(Action(Of FindOneAndUpdateOptions(Of T, TProjection)))
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Option(System.Action(Of MongoDB.Driver.FindOneAndUpdateOptions(Of T, TProjection)))
  name.vb: Option(Action(Of FindOneAndUpdateOptions(Of T, TProjection)))
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Option(System.Action{MongoDB.Driver.FindOneAndUpdateOptions{`0,`1}})
    name: Option
    nameWithType: UpdateAndGet<T, TProjection>.Option
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Option
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MongoDB.Driver.FindOneAndUpdateOptions`2
    name: FindOneAndUpdateOptions
    nameWithType: FindOneAndUpdateOptions
    fullName: MongoDB.Driver.FindOneAndUpdateOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProjection
    nameWithType: TProjection
    fullName: TProjection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Option(System.Action{MongoDB.Driver.FindOneAndUpdateOptions{`0,`1}})
    name: Option
    nameWithType: UpdateAndGet(Of T, TProjection).Option
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Option
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MongoDB.Driver.FindOneAndUpdateOptions`2
    name: FindOneAndUpdateOptions
    nameWithType: FindOneAndUpdateOptions
    fullName: MongoDB.Driver.FindOneAndUpdateOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProjection
    nameWithType: TProjection
    fullName: TProjection
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.Project(System.Linq.Expressions.Expression{System.Func{`0,`1}})
  commentId: M:MongoDB.Entities.UpdateAndGet`2.Project(System.Linq.Expressions.Expression{System.Func{`0,`1}})
  isExternal: true
  name: Project(Expression<Func<T, TProjection>>)
  nameWithType: UpdateAndGet<T, TProjection>.Project(Expression<Func<T, TProjection>>)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Project(System.Linq.Expressions.Expression<System.Func<T, TProjection>>)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).Project(Expression(Of Func(Of T, TProjection)))
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Project(System.Linq.Expressions.Expression(Of System.Func(Of T, TProjection)))
  name.vb: Project(Expression(Of Func(Of T, TProjection)))
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Project(System.Linq.Expressions.Expression{System.Func{`0,`1}})
    name: Project
    nameWithType: UpdateAndGet<T, TProjection>.Project
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Project
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProjection
    nameWithType: TProjection
    fullName: TProjection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Project(System.Linq.Expressions.Expression{System.Func{`0,`1}})
    name: Project
    nameWithType: UpdateAndGet(Of T, TProjection).Project
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Project
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProjection
    nameWithType: TProjection
    fullName: TProjection
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.Project(System.Func{MongoDB.Driver.ProjectionDefinitionBuilder{`0},MongoDB.Driver.ProjectionDefinition{`0,`1}})
  commentId: M:MongoDB.Entities.UpdateAndGet`2.Project(System.Func{MongoDB.Driver.ProjectionDefinitionBuilder{`0},MongoDB.Driver.ProjectionDefinition{`0,`1}})
  isExternal: true
  name: Project(Func<ProjectionDefinitionBuilder<T>, ProjectionDefinition<T, TProjection>>)
  nameWithType: UpdateAndGet<T, TProjection>.Project(Func<ProjectionDefinitionBuilder<T>, ProjectionDefinition<T, TProjection>>)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Project(System.Func<MongoDB.Driver.ProjectionDefinitionBuilder<T>, MongoDB.Driver.ProjectionDefinition<T, TProjection>>)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).Project(Func(Of ProjectionDefinitionBuilder(Of T), ProjectionDefinition(Of T, TProjection)))
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Project(System.Func(Of MongoDB.Driver.ProjectionDefinitionBuilder(Of T), MongoDB.Driver.ProjectionDefinition(Of T, TProjection)))
  name.vb: Project(Func(Of ProjectionDefinitionBuilder(Of T), ProjectionDefinition(Of T, TProjection)))
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.Project(System.Func{MongoDB.Driver.ProjectionDefinitionBuilder{`0},MongoDB.Driver.ProjectionDefinition{`0,`1}})
    name: Project
    nameWithType: UpdateAndGet<T, TProjection>.Project
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.Project
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MongoDB.Driver.ProjectionDefinitionBuilder`1
    name: ProjectionDefinitionBuilder
    nameWithType: ProjectionDefinitionBuilder
    fullName: MongoDB.Driver.ProjectionDefinitionBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.ProjectionDefinition`2
    name: ProjectionDefinition
    nameWithType: ProjectionDefinition
    fullName: MongoDB.Driver.ProjectionDefinition
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProjection
    nameWithType: TProjection
    fullName: TProjection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.Project(System.Func{MongoDB.Driver.ProjectionDefinitionBuilder{`0},MongoDB.Driver.ProjectionDefinition{`0,`1}})
    name: Project
    nameWithType: UpdateAndGet(Of T, TProjection).Project
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).Project
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MongoDB.Driver.ProjectionDefinitionBuilder`1
    name: ProjectionDefinitionBuilder
    nameWithType: ProjectionDefinitionBuilder
    fullName: MongoDB.Driver.ProjectionDefinitionBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.ProjectionDefinition`2
    name: ProjectionDefinition
    nameWithType: ProjectionDefinition
    fullName: MongoDB.Driver.ProjectionDefinition
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProjection
    nameWithType: TProjection
    fullName: TProjection
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.IgnoreGlobalFilters
  commentId: M:MongoDB.Entities.UpdateAndGet`2.IgnoreGlobalFilters
  name: IgnoreGlobalFilters()
  nameWithType: UpdateAndGet<T, TProjection>.IgnoreGlobalFilters()
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.IgnoreGlobalFilters()
  nameWithType.vb: UpdateAndGet(Of T, TProjection).IgnoreGlobalFilters()
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).IgnoreGlobalFilters()
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.IgnoreGlobalFilters
    name: IgnoreGlobalFilters
    nameWithType: UpdateAndGet<T, TProjection>.IgnoreGlobalFilters
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.IgnoreGlobalFilters
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.IgnoreGlobalFilters
    name: IgnoreGlobalFilters
    nameWithType: UpdateAndGet(Of T, TProjection).IgnoreGlobalFilters
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).IgnoreGlobalFilters
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.ExecuteAsync(System.Threading.CancellationToken)
  isExternal: true
  name: ExecuteAsync(CancellationToken)
  nameWithType: UpdateAndGet<T, TProjection>.ExecuteAsync(CancellationToken)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.ExecuteAsync(System.Threading.CancellationToken)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).ExecuteAsync(CancellationToken)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).ExecuteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: UpdateAndGet<T, TProjection>.ExecuteAsync
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: UpdateAndGet(Of T, TProjection).ExecuteAsync
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateAndGet`2.ExecutePipelineAsync(System.Threading.CancellationToken)
  commentId: M:MongoDB.Entities.UpdateAndGet`2.ExecutePipelineAsync(System.Threading.CancellationToken)
  isExternal: true
  name: ExecutePipelineAsync(CancellationToken)
  nameWithType: UpdateAndGet<T, TProjection>.ExecutePipelineAsync(CancellationToken)
  fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.ExecutePipelineAsync(System.Threading.CancellationToken)
  nameWithType.vb: UpdateAndGet(Of T, TProjection).ExecutePipelineAsync(CancellationToken)
  fullName.vb: MongoDB.Entities.UpdateAndGet(Of T, TProjection).ExecutePipelineAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateAndGet`2.ExecutePipelineAsync(System.Threading.CancellationToken)
    name: ExecutePipelineAsync
    nameWithType: UpdateAndGet<T, TProjection>.ExecutePipelineAsync
    fullName: MongoDB.Entities.UpdateAndGet<T, TProjection>.ExecutePipelineAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateAndGet`2.ExecutePipelineAsync(System.Threading.CancellationToken)
    name: ExecutePipelineAsync
    nameWithType: UpdateAndGet(Of T, TProjection).ExecutePipelineAsync
    fullName: MongoDB.Entities.UpdateAndGet(Of T, TProjection).ExecutePipelineAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateBase`1.defs
  commentId: F:MongoDB.Entities.UpdateBase`1.defs
  name: defs
  nameWithType: UpdateBase<T>.defs
  fullName: MongoDB.Entities.UpdateBase<T>.defs
  nameWithType.vb: UpdateBase(Of T).defs
  fullName.vb: MongoDB.Entities.UpdateBase(Of T).defs
- uid: MongoDB.Entities.UpdateBase`1.AddModification``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)
  commentId: M:MongoDB.Entities.UpdateBase`1.AddModification``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)
  isExternal: true
  name: AddModification<TProp>(Expression<Func<T, TProp>>, TProp)
  nameWithType: UpdateBase<T>.AddModification<TProp>(Expression<Func<T, TProp>>, TProp)
  fullName: MongoDB.Entities.UpdateBase<T>.AddModification<TProp>(System.Linq.Expressions.Expression<System.Func<T, TProp>>, TProp)
  nameWithType.vb: UpdateBase(Of T).AddModification(Of TProp)(Expression(Of Func(Of T, TProp)), TProp)
  fullName.vb: MongoDB.Entities.UpdateBase(Of T).AddModification(Of TProp)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProp)), TProp)
  name.vb: AddModification(Of TProp)(Expression(Of Func(Of T, TProp)), TProp)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateBase`1.AddModification``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)
    name: AddModification<TProp>
    nameWithType: UpdateBase<T>.AddModification<TProp>
    fullName: MongoDB.Entities.UpdateBase<T>.AddModification<TProp>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateBase`1.AddModification``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)
    name: AddModification(Of TProp)
    nameWithType: UpdateBase(Of T).AddModification(Of TProp)
    fullName: MongoDB.Entities.UpdateBase(Of T).AddModification(Of TProp)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateBase`1.AddModification(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{`0},MongoDB.Driver.UpdateDefinition{`0}})
  commentId: M:MongoDB.Entities.UpdateBase`1.AddModification(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{`0},MongoDB.Driver.UpdateDefinition{`0}})
  isExternal: true
  name: AddModification(Func<UpdateDefinitionBuilder<T>, UpdateDefinition<T>>)
  nameWithType: UpdateBase<T>.AddModification(Func<UpdateDefinitionBuilder<T>, UpdateDefinition<T>>)
  fullName: MongoDB.Entities.UpdateBase<T>.AddModification(System.Func<MongoDB.Driver.UpdateDefinitionBuilder<T>, MongoDB.Driver.UpdateDefinition<T>>)
  nameWithType.vb: UpdateBase(Of T).AddModification(Func(Of UpdateDefinitionBuilder(Of T), UpdateDefinition(Of T)))
  fullName.vb: MongoDB.Entities.UpdateBase(Of T).AddModification(System.Func(Of MongoDB.Driver.UpdateDefinitionBuilder(Of T), MongoDB.Driver.UpdateDefinition(Of T)))
  name.vb: AddModification(Func(Of UpdateDefinitionBuilder(Of T), UpdateDefinition(Of T)))
  spec.csharp:
  - uid: MongoDB.Entities.UpdateBase`1.AddModification(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{`0},MongoDB.Driver.UpdateDefinition{`0}})
    name: AddModification
    nameWithType: UpdateBase<T>.AddModification
    fullName: MongoDB.Entities.UpdateBase<T>.AddModification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MongoDB.Driver.UpdateDefinitionBuilder`1
    name: UpdateDefinitionBuilder
    nameWithType: UpdateDefinitionBuilder
    fullName: MongoDB.Driver.UpdateDefinitionBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.UpdateDefinition`1
    name: UpdateDefinition
    nameWithType: UpdateDefinition
    fullName: MongoDB.Driver.UpdateDefinition
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateBase`1.AddModification(System.Func{MongoDB.Driver.UpdateDefinitionBuilder{`0},MongoDB.Driver.UpdateDefinition{`0}})
    name: AddModification
    nameWithType: UpdateBase(Of T).AddModification
    fullName: MongoDB.Entities.UpdateBase(Of T).AddModification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MongoDB.Driver.UpdateDefinitionBuilder`1
    name: UpdateDefinitionBuilder
    nameWithType: UpdateDefinitionBuilder
    fullName: MongoDB.Driver.UpdateDefinitionBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.UpdateDefinition`1
    name: UpdateDefinition
    nameWithType: UpdateDefinition
    fullName: MongoDB.Driver.UpdateDefinition
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateBase`1.AddModification(System.String)
  commentId: M:MongoDB.Entities.UpdateBase`1.AddModification(System.String)
  isExternal: true
  name: AddModification(String)
  nameWithType: UpdateBase<T>.AddModification(String)
  fullName: MongoDB.Entities.UpdateBase<T>.AddModification(System.String)
  nameWithType.vb: UpdateBase(Of T).AddModification(String)
  fullName.vb: MongoDB.Entities.UpdateBase(Of T).AddModification(System.String)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateBase`1.AddModification(System.String)
    name: AddModification
    nameWithType: UpdateBase<T>.AddModification
    fullName: MongoDB.Entities.UpdateBase<T>.AddModification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateBase`1.AddModification(System.String)
    name: AddModification
    nameWithType: UpdateBase(Of T).AddModification
    fullName: MongoDB.Entities.UpdateBase(Of T).AddModification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.UpdateBase`1.AddModification(MongoDB.Entities.Template)
  commentId: M:MongoDB.Entities.UpdateBase`1.AddModification(MongoDB.Entities.Template)
  name: AddModification(Template)
  nameWithType: UpdateBase<T>.AddModification(Template)
  fullName: MongoDB.Entities.UpdateBase<T>.AddModification(MongoDB.Entities.Template)
  nameWithType.vb: UpdateBase(Of T).AddModification(Template)
  fullName.vb: MongoDB.Entities.UpdateBase(Of T).AddModification(MongoDB.Entities.Template)
  spec.csharp:
  - uid: MongoDB.Entities.UpdateBase`1.AddModification(MongoDB.Entities.Template)
    name: AddModification
    nameWithType: UpdateBase<T>.AddModification
    fullName: MongoDB.Entities.UpdateBase<T>.AddModification
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.UpdateBase`1.AddModification(MongoDB.Entities.Template)
    name: AddModification
    nameWithType: UpdateBase(Of T).AddModification
    fullName: MongoDB.Entities.UpdateBase(Of T).AddModification
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.Template
    name: Template
    nameWithType: Template
    fullName: MongoDB.Entities.Template
  - name: )
    nameWithType: )
    fullName: )
