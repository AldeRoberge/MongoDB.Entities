### YamlMime:ManagedReference
items:
- uid: MongoDB.Entities.Many`1.Joined`1
  commentId: T:MongoDB.Entities.Many`1.Joined`1
  id: Many`1.Joined`1
  parent: MongoDB.Entities
  children:
  - MongoDB.Entities.Many`1.Joined`1.Results
  langs:
  - csharp
  - vb
  name: Many<TChild>.Joined<T>
  nameWithType: Many<TChild>.Joined<T>
  fullName: MongoDB.Entities.Many<TChild>.Joined<T>
  type: Class
  source:
    id: Joined
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Relationships\Many.cs
    startLine: 577
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  summary: "\nA class used to hold join results when joining relationships\n"
  example: []
  syntax:
    content: 'public class Joined<T> : JoinRecord, IEntity'
    typeParameters:
    - id: T
      description: The type of the resulting objects
    content.vb: >-
      Public Class Joined(Of T)

          Inherits JoinRecord

          Implements IEntity
  inheritance:
  - System.Object
  - MongoDB.Entities.Entity
  - MongoDB.Entities.JoinRecord
  implements:
  - MongoDB.Entities.IEntity
  inheritedMembers:
  - MongoDB.Entities.JoinRecord.ParentID
  - MongoDB.Entities.JoinRecord.ChildID
  - MongoDB.Entities.Entity.ID
  - MongoDB.Entities.Entity.GenerateNewID
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.Database``1
  - MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.DatabaseName``1
  - MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.Collection``1
  - MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.CollectionName``1
  - MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.Queryable``1(MongoDB.Driver.AggregateOptions)
  - MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.Fluent``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.AggregateOptions)
  - MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.ToReference``1
  - MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.ToDocument``1
  - MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.SaveAsync``1(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  - MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.SaveOnlyAsync``1(System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{{TChild}}.Joined{{T}},System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  - MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.SaveExceptAsync``1(System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{{TChild}}.Joined{{T}},System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  - MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.SavePreservingAsync``1(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  - MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.DeleteAsync``1(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  - MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.NextSequentialNumberAsync``1(System.Threading.CancellationToken)
  - MongoDB.Entities.IEntity.MongoDB.Entities.Extensions.InitOneToMany``1(System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{{TChild}}}})
  - MongoDB.Entities.IEntity.MongoDB.Entities.Extensions.InitManyToMany``1(System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{{TChild}}}},System.Linq.Expressions.Expression{System.Func{{TChild},System.Object}})
  nameWithType.vb: Many(Of TChild).Joined(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: MongoDB.Entities.Many(Of TChild).Joined(Of T)
  name.vb: Many(Of TChild).Joined(Of T)
- uid: MongoDB.Entities.Many`1.Joined`1.Results
  commentId: P:MongoDB.Entities.Many`1.Joined`1.Results
  id: Results
  parent: MongoDB.Entities.Many`1.Joined`1
  langs:
  - csharp
  - vb
  name: Results
  nameWithType: Many<TChild>.Joined<T>.Results
  fullName: MongoDB.Entities.Many<TChild>.Joined<T>.Results
  type: Property
  source:
    id: Results
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Relationships\Many.cs
    startLine: 579
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  syntax:
    content: public T[] Results { get; set; }
    parameters: []
    return:
      type: '{T}[]'
    content.vb: Public Property Results As T()
  overload: MongoDB.Entities.Many`1.Joined`1.Results*
  nameWithType.vb: Many(Of TChild).Joined(Of T).Results
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: MongoDB.Entities.Many(Of TChild).Joined(Of T).Results
references:
- uid: MongoDB.Entities
  commentId: N:MongoDB.Entities
  name: MongoDB.Entities
  nameWithType: MongoDB.Entities
  fullName: MongoDB.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MongoDB.Entities.Entity
  commentId: T:MongoDB.Entities.Entity
  parent: MongoDB.Entities
  name: Entity
  nameWithType: Entity
  fullName: MongoDB.Entities.Entity
- uid: MongoDB.Entities.JoinRecord
  commentId: T:MongoDB.Entities.JoinRecord
  parent: MongoDB.Entities
  name: JoinRecord
  nameWithType: JoinRecord
  fullName: MongoDB.Entities.JoinRecord
- uid: MongoDB.Entities.IEntity
  commentId: T:MongoDB.Entities.IEntity
  parent: MongoDB.Entities
  name: IEntity
  nameWithType: IEntity
  fullName: MongoDB.Entities.IEntity
- uid: MongoDB.Entities.JoinRecord.ParentID
  commentId: P:MongoDB.Entities.JoinRecord.ParentID
  parent: MongoDB.Entities.JoinRecord
  name: ParentID
  nameWithType: JoinRecord.ParentID
  fullName: MongoDB.Entities.JoinRecord.ParentID
- uid: MongoDB.Entities.JoinRecord.ChildID
  commentId: P:MongoDB.Entities.JoinRecord.ChildID
  parent: MongoDB.Entities.JoinRecord
  name: ChildID
  nameWithType: JoinRecord.ChildID
  fullName: MongoDB.Entities.JoinRecord.ChildID
- uid: MongoDB.Entities.Entity.ID
  commentId: P:MongoDB.Entities.Entity.ID
  parent: MongoDB.Entities.Entity
  name: ID
  nameWithType: Entity.ID
  fullName: MongoDB.Entities.Entity.ID
- uid: MongoDB.Entities.Entity.GenerateNewID
  commentId: M:MongoDB.Entities.Entity.GenerateNewID
  parent: MongoDB.Entities.Entity
  name: GenerateNewID()
  nameWithType: Entity.GenerateNewID()
  fullName: MongoDB.Entities.Entity.GenerateNewID()
  spec.csharp:
  - uid: MongoDB.Entities.Entity.GenerateNewID
    name: GenerateNewID
    nameWithType: Entity.GenerateNewID
    fullName: MongoDB.Entities.Entity.GenerateNewID
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Entity.GenerateNewID
    name: GenerateNewID
    nameWithType: Entity.GenerateNewID
    fullName: MongoDB.Entities.Entity.GenerateNewID
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.Database``1
  commentId: M:MongoDB.Entities.Extensions.Database``1(``0)
  parent: MongoDB.Entities.Extensions
  definition: MongoDB.Entities.Extensions.Database``1(``0)
  name: Database<Many<TChild>.Joined<T>>()
  nameWithType: Extensions.Database<Many<TChild>.Joined<T>>()
  fullName: MongoDB.Entities.Extensions.Database<MongoDB.Entities.Many<TChild>.Joined<T>>()
  nameWithType.vb: Extensions.Database(Of Many(Of TChild).Joined(Of T))()
  fullName.vb: MongoDB.Entities.Extensions.Database(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))()
  name.vb: Database(Of Many(Of TChild).Joined(Of T))()
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.Database``1
    name: Database<Many<TChild>.Joined<T>>
    nameWithType: Extensions.Database<Many<TChild>.Joined<T>>
    fullName: MongoDB.Entities.Extensions.Database<MongoDB.Entities.Many<TChild>.Joined<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.Database``1
    name: Database(Of Many(Of TChild).Joined(Of T))
    nameWithType: Extensions.Database(Of Many(Of TChild).Joined(Of T))
    fullName: MongoDB.Entities.Extensions.Database(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.DatabaseName``1
  commentId: M:MongoDB.Entities.Extensions.DatabaseName``1(``0)
  parent: MongoDB.Entities.Extensions
  definition: MongoDB.Entities.Extensions.DatabaseName``1(``0)
  name: DatabaseName<Many<TChild>.Joined<T>>()
  nameWithType: Extensions.DatabaseName<Many<TChild>.Joined<T>>()
  fullName: MongoDB.Entities.Extensions.DatabaseName<MongoDB.Entities.Many<TChild>.Joined<T>>()
  nameWithType.vb: Extensions.DatabaseName(Of Many(Of TChild).Joined(Of T))()
  fullName.vb: MongoDB.Entities.Extensions.DatabaseName(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))()
  name.vb: DatabaseName(Of Many(Of TChild).Joined(Of T))()
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.DatabaseName``1
    name: DatabaseName<Many<TChild>.Joined<T>>
    nameWithType: Extensions.DatabaseName<Many<TChild>.Joined<T>>
    fullName: MongoDB.Entities.Extensions.DatabaseName<MongoDB.Entities.Many<TChild>.Joined<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.DatabaseName``1
    name: DatabaseName(Of Many(Of TChild).Joined(Of T))
    nameWithType: Extensions.DatabaseName(Of Many(Of TChild).Joined(Of T))
    fullName: MongoDB.Entities.Extensions.DatabaseName(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.Collection``1
  commentId: M:MongoDB.Entities.Extensions.Collection``1(``0)
  parent: MongoDB.Entities.Extensions
  definition: MongoDB.Entities.Extensions.Collection``1(``0)
  name: Collection<Many<TChild>.Joined<T>>()
  nameWithType: Extensions.Collection<Many<TChild>.Joined<T>>()
  fullName: MongoDB.Entities.Extensions.Collection<MongoDB.Entities.Many<TChild>.Joined<T>>()
  nameWithType.vb: Extensions.Collection(Of Many(Of TChild).Joined(Of T))()
  fullName.vb: MongoDB.Entities.Extensions.Collection(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))()
  name.vb: Collection(Of Many(Of TChild).Joined(Of T))()
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.Collection``1
    name: Collection<Many<TChild>.Joined<T>>
    nameWithType: Extensions.Collection<Many<TChild>.Joined<T>>
    fullName: MongoDB.Entities.Extensions.Collection<MongoDB.Entities.Many<TChild>.Joined<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.Collection``1
    name: Collection(Of Many(Of TChild).Joined(Of T))
    nameWithType: Extensions.Collection(Of Many(Of TChild).Joined(Of T))
    fullName: MongoDB.Entities.Extensions.Collection(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.CollectionName``1
  commentId: M:MongoDB.Entities.Extensions.CollectionName``1(``0)
  parent: MongoDB.Entities.Extensions
  definition: MongoDB.Entities.Extensions.CollectionName``1(``0)
  name: CollectionName<Many<TChild>.Joined<T>>()
  nameWithType: Extensions.CollectionName<Many<TChild>.Joined<T>>()
  fullName: MongoDB.Entities.Extensions.CollectionName<MongoDB.Entities.Many<TChild>.Joined<T>>()
  nameWithType.vb: Extensions.CollectionName(Of Many(Of TChild).Joined(Of T))()
  fullName.vb: MongoDB.Entities.Extensions.CollectionName(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))()
  name.vb: CollectionName(Of Many(Of TChild).Joined(Of T))()
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.CollectionName``1
    name: CollectionName<Many<TChild>.Joined<T>>
    nameWithType: Extensions.CollectionName<Many<TChild>.Joined<T>>
    fullName: MongoDB.Entities.Extensions.CollectionName<MongoDB.Entities.Many<TChild>.Joined<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.CollectionName``1
    name: CollectionName(Of Many(Of TChild).Joined(Of T))
    nameWithType: Extensions.CollectionName(Of Many(Of TChild).Joined(Of T))
    fullName: MongoDB.Entities.Extensions.CollectionName(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.Queryable``1(MongoDB.Driver.AggregateOptions)
  commentId: M:MongoDB.Entities.Extensions.Queryable``1(``0,MongoDB.Driver.AggregateOptions)
  parent: MongoDB.Entities.Extensions
  definition: MongoDB.Entities.Extensions.Queryable``1(``0,MongoDB.Driver.AggregateOptions)
  name: Queryable<Many<TChild>.Joined<T>>(AggregateOptions)
  nameWithType: Extensions.Queryable<Many<TChild>.Joined<T>>(AggregateOptions)
  fullName: MongoDB.Entities.Extensions.Queryable<MongoDB.Entities.Many<TChild>.Joined<T>>(MongoDB.Driver.AggregateOptions)
  nameWithType.vb: Extensions.Queryable(Of Many(Of TChild).Joined(Of T))(AggregateOptions)
  fullName.vb: MongoDB.Entities.Extensions.Queryable(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))(MongoDB.Driver.AggregateOptions)
  name.vb: Queryable(Of Many(Of TChild).Joined(Of T))(AggregateOptions)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.Queryable``1(MongoDB.Driver.AggregateOptions)
    name: Queryable<Many<TChild>.Joined<T>>
    nameWithType: Extensions.Queryable<Many<TChild>.Joined<T>>
    fullName: MongoDB.Entities.Extensions.Queryable<MongoDB.Entities.Many<TChild>.Joined<T>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Driver.AggregateOptions
    name: AggregateOptions
    nameWithType: AggregateOptions
    fullName: MongoDB.Driver.AggregateOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.Queryable``1(MongoDB.Driver.AggregateOptions)
    name: Queryable(Of Many(Of TChild).Joined(Of T))
    nameWithType: Extensions.Queryable(Of Many(Of TChild).Joined(Of T))
    fullName: MongoDB.Entities.Extensions.Queryable(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Driver.AggregateOptions
    name: AggregateOptions
    nameWithType: AggregateOptions
    fullName: MongoDB.Driver.AggregateOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.Fluent``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.AggregateOptions)
  commentId: M:MongoDB.Entities.Extensions.Fluent``1(``0,MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.AggregateOptions)
  parent: MongoDB.Entities.Extensions
  definition: MongoDB.Entities.Extensions.Fluent``1(``0,MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.AggregateOptions)
  name: Fluent<Many<TChild>.Joined<T>>(IClientSessionHandle, AggregateOptions)
  nameWithType: Extensions.Fluent<Many<TChild>.Joined<T>>(IClientSessionHandle, AggregateOptions)
  fullName: MongoDB.Entities.Extensions.Fluent<MongoDB.Entities.Many<TChild>.Joined<T>>(MongoDB.Driver.IClientSessionHandle, MongoDB.Driver.AggregateOptions)
  nameWithType.vb: Extensions.Fluent(Of Many(Of TChild).Joined(Of T))(IClientSessionHandle, AggregateOptions)
  fullName.vb: MongoDB.Entities.Extensions.Fluent(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))(MongoDB.Driver.IClientSessionHandle, MongoDB.Driver.AggregateOptions)
  name.vb: Fluent(Of Many(Of TChild).Joined(Of T))(IClientSessionHandle, AggregateOptions)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.Fluent``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.AggregateOptions)
    name: Fluent<Many<TChild>.Joined<T>>
    nameWithType: Extensions.Fluent<Many<TChild>.Joined<T>>
    fullName: MongoDB.Entities.Extensions.Fluent<MongoDB.Entities.Many<TChild>.Joined<T>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.AggregateOptions
    name: AggregateOptions
    nameWithType: AggregateOptions
    fullName: MongoDB.Driver.AggregateOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.Fluent``1(MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.AggregateOptions)
    name: Fluent(Of Many(Of TChild).Joined(Of T))
    nameWithType: Extensions.Fluent(Of Many(Of TChild).Joined(Of T))
    fullName: MongoDB.Entities.Extensions.Fluent(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.AggregateOptions
    name: AggregateOptions
    nameWithType: AggregateOptions
    fullName: MongoDB.Driver.AggregateOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.ToReference``1
  commentId: M:MongoDB.Entities.Extensions.ToReference``1(``0)
  parent: MongoDB.Entities.Extensions
  definition: MongoDB.Entities.Extensions.ToReference``1(``0)
  name: ToReference<Many<TChild>.Joined<T>>()
  nameWithType: Extensions.ToReference<Many<TChild>.Joined<T>>()
  fullName: MongoDB.Entities.Extensions.ToReference<MongoDB.Entities.Many<TChild>.Joined<T>>()
  nameWithType.vb: Extensions.ToReference(Of Many(Of TChild).Joined(Of T))()
  fullName.vb: MongoDB.Entities.Extensions.ToReference(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))()
  name.vb: ToReference(Of Many(Of TChild).Joined(Of T))()
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.ToReference``1
    name: ToReference<Many<TChild>.Joined<T>>
    nameWithType: Extensions.ToReference<Many<TChild>.Joined<T>>
    fullName: MongoDB.Entities.Extensions.ToReference<MongoDB.Entities.Many<TChild>.Joined<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.ToReference``1
    name: ToReference(Of Many(Of TChild).Joined(Of T))
    nameWithType: Extensions.ToReference(Of Many(Of TChild).Joined(Of T))
    fullName: MongoDB.Entities.Extensions.ToReference(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.ToDocument``1
  commentId: M:MongoDB.Entities.Extensions.ToDocument``1(``0)
  parent: MongoDB.Entities.Extensions
  definition: MongoDB.Entities.Extensions.ToDocument``1(``0)
  name: ToDocument<Many<TChild>.Joined<T>>()
  nameWithType: Extensions.ToDocument<Many<TChild>.Joined<T>>()
  fullName: MongoDB.Entities.Extensions.ToDocument<MongoDB.Entities.Many<TChild>.Joined<T>>()
  nameWithType.vb: Extensions.ToDocument(Of Many(Of TChild).Joined(Of T))()
  fullName.vb: MongoDB.Entities.Extensions.ToDocument(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))()
  name.vb: ToDocument(Of Many(Of TChild).Joined(Of T))()
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.ToDocument``1
    name: ToDocument<Many<TChild>.Joined<T>>
    nameWithType: Extensions.ToDocument<Many<TChild>.Joined<T>>
    fullName: MongoDB.Entities.Extensions.ToDocument<MongoDB.Entities.Many<TChild>.Joined<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.ToDocument``1
    name: ToDocument(Of Many(Of TChild).Joined(Of T))
    nameWithType: Extensions.ToDocument(Of Many(Of TChild).Joined(Of T))
    fullName: MongoDB.Entities.Extensions.ToDocument(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.SaveAsync``1(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  commentId: M:MongoDB.Entities.Extensions.SaveAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  parent: MongoDB.Entities.Extensions
  definition: MongoDB.Entities.Extensions.SaveAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  name: SaveAsync<Many<TChild>.Joined<T>>(IClientSessionHandle, CancellationToken)
  nameWithType: Extensions.SaveAsync<Many<TChild>.Joined<T>>(IClientSessionHandle, CancellationToken)
  fullName: MongoDB.Entities.Extensions.SaveAsync<MongoDB.Entities.Many<TChild>.Joined<T>>(MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  nameWithType.vb: Extensions.SaveAsync(Of Many(Of TChild).Joined(Of T))(IClientSessionHandle, CancellationToken)
  fullName.vb: MongoDB.Entities.Extensions.SaveAsync(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))(MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  name.vb: SaveAsync(Of Many(Of TChild).Joined(Of T))(IClientSessionHandle, CancellationToken)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.SaveAsync``1(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: SaveAsync<Many<TChild>.Joined<T>>
    nameWithType: Extensions.SaveAsync<Many<TChild>.Joined<T>>
    fullName: MongoDB.Entities.Extensions.SaveAsync<MongoDB.Entities.Many<TChild>.Joined<T>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.SaveAsync``1(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: SaveAsync(Of Many(Of TChild).Joined(Of T))
    nameWithType: Extensions.SaveAsync(Of Many(Of TChild).Joined(Of T))
    fullName: MongoDB.Entities.Extensions.SaveAsync(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.SaveOnlyAsync``1(System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{{TChild}}.Joined{{T}},System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  commentId: M:MongoDB.Entities.Extensions.SaveOnlyAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  parent: MongoDB.Entities.Extensions
  definition: MongoDB.Entities.Extensions.SaveOnlyAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  name: SaveOnlyAsync<Many<TChild>.Joined<T>>(Expression<Func<Many.Joined<T>, Object>>, IClientSessionHandle, CancellationToken)
  nameWithType: Extensions.SaveOnlyAsync<Many<TChild>.Joined<T>>(Expression<Func<Many.Joined<T>, Object>>, IClientSessionHandle, CancellationToken)
  fullName: MongoDB.Entities.Extensions.SaveOnlyAsync<MongoDB.Entities.Many<TChild>.Joined<T>>(System.Linq.Expressions.Expression<System.Func<MongoDB.Entities.Many.Joined<T>, System.Object>>, MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  nameWithType.vb: Extensions.SaveOnlyAsync(Of Many(Of TChild).Joined(Of T))(Expression(Of Func(Of Many.Joined(Of T), Object)), IClientSessionHandle, CancellationToken)
  fullName.vb: MongoDB.Entities.Extensions.SaveOnlyAsync(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))(System.Linq.Expressions.Expression(Of System.Func(Of MongoDB.Entities.Many.Joined(Of T), System.Object)), MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  name.vb: SaveOnlyAsync(Of Many(Of TChild).Joined(Of T))(Expression(Of Func(Of Many.Joined(Of T), Object)), IClientSessionHandle, CancellationToken)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.SaveOnlyAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: SaveOnlyAsync<Many<TChild>.Joined<T>>
    nameWithType: Extensions.SaveOnlyAsync<Many<TChild>.Joined<T>>
    fullName: MongoDB.Entities.Extensions.SaveOnlyAsync<MongoDB.Entities.Many<TChild>.Joined<T>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MongoDB.Entities.Many`1.Joined`1
    name: Many.Joined
    nameWithType: Many.Joined
    fullName: MongoDB.Entities.Many.Joined
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.SaveOnlyAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: SaveOnlyAsync(Of Many(Of TChild).Joined(Of T))
    nameWithType: Extensions.SaveOnlyAsync(Of Many(Of TChild).Joined(Of T))
    fullName: MongoDB.Entities.Extensions.SaveOnlyAsync(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MongoDB.Entities.Many`1.Joined`1
    name: Many.Joined
    nameWithType: Many.Joined
    fullName: MongoDB.Entities.Many.Joined
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.SaveExceptAsync``1(System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{{TChild}}.Joined{{T}},System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  commentId: M:MongoDB.Entities.Extensions.SaveExceptAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  parent: MongoDB.Entities.Extensions
  definition: MongoDB.Entities.Extensions.SaveExceptAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  name: SaveExceptAsync<Many<TChild>.Joined<T>>(Expression<Func<Many.Joined<T>, Object>>, IClientSessionHandle, CancellationToken)
  nameWithType: Extensions.SaveExceptAsync<Many<TChild>.Joined<T>>(Expression<Func<Many.Joined<T>, Object>>, IClientSessionHandle, CancellationToken)
  fullName: MongoDB.Entities.Extensions.SaveExceptAsync<MongoDB.Entities.Many<TChild>.Joined<T>>(System.Linq.Expressions.Expression<System.Func<MongoDB.Entities.Many.Joined<T>, System.Object>>, MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  nameWithType.vb: Extensions.SaveExceptAsync(Of Many(Of TChild).Joined(Of T))(Expression(Of Func(Of Many.Joined(Of T), Object)), IClientSessionHandle, CancellationToken)
  fullName.vb: MongoDB.Entities.Extensions.SaveExceptAsync(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))(System.Linq.Expressions.Expression(Of System.Func(Of MongoDB.Entities.Many.Joined(Of T), System.Object)), MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  name.vb: SaveExceptAsync(Of Many(Of TChild).Joined(Of T))(Expression(Of Func(Of Many.Joined(Of T), Object)), IClientSessionHandle, CancellationToken)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.SaveExceptAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: SaveExceptAsync<Many<TChild>.Joined<T>>
    nameWithType: Extensions.SaveExceptAsync<Many<TChild>.Joined<T>>
    fullName: MongoDB.Entities.Extensions.SaveExceptAsync<MongoDB.Entities.Many<TChild>.Joined<T>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MongoDB.Entities.Many`1.Joined`1
    name: Many.Joined
    nameWithType: Many.Joined
    fullName: MongoDB.Entities.Many.Joined
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.SaveExceptAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: SaveExceptAsync(Of Many(Of TChild).Joined(Of T))
    nameWithType: Extensions.SaveExceptAsync(Of Many(Of TChild).Joined(Of T))
    fullName: MongoDB.Entities.Extensions.SaveExceptAsync(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MongoDB.Entities.Many`1.Joined`1
    name: Many.Joined
    nameWithType: Many.Joined
    fullName: MongoDB.Entities.Many.Joined
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.SavePreservingAsync``1(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  commentId: M:MongoDB.Entities.Extensions.SavePreservingAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  parent: MongoDB.Entities.Extensions
  definition: MongoDB.Entities.Extensions.SavePreservingAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  name: SavePreservingAsync<Many<TChild>.Joined<T>>(IClientSessionHandle, CancellationToken)
  nameWithType: Extensions.SavePreservingAsync<Many<TChild>.Joined<T>>(IClientSessionHandle, CancellationToken)
  fullName: MongoDB.Entities.Extensions.SavePreservingAsync<MongoDB.Entities.Many<TChild>.Joined<T>>(MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  nameWithType.vb: Extensions.SavePreservingAsync(Of Many(Of TChild).Joined(Of T))(IClientSessionHandle, CancellationToken)
  fullName.vb: MongoDB.Entities.Extensions.SavePreservingAsync(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))(MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  name.vb: SavePreservingAsync(Of Many(Of TChild).Joined(Of T))(IClientSessionHandle, CancellationToken)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.SavePreservingAsync``1(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: SavePreservingAsync<Many<TChild>.Joined<T>>
    nameWithType: Extensions.SavePreservingAsync<Many<TChild>.Joined<T>>
    fullName: MongoDB.Entities.Extensions.SavePreservingAsync<MongoDB.Entities.Many<TChild>.Joined<T>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.SavePreservingAsync``1(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: SavePreservingAsync(Of Many(Of TChild).Joined(Of T))
    nameWithType: Extensions.SavePreservingAsync(Of Many(Of TChild).Joined(Of T))
    fullName: MongoDB.Entities.Extensions.SavePreservingAsync(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.DeleteAsync``1(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  commentId: M:MongoDB.Entities.Extensions.DeleteAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  parent: MongoDB.Entities.Extensions
  definition: MongoDB.Entities.Extensions.DeleteAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  name: DeleteAsync<Many<TChild>.Joined<T>>(IClientSessionHandle, CancellationToken)
  nameWithType: Extensions.DeleteAsync<Many<TChild>.Joined<T>>(IClientSessionHandle, CancellationToken)
  fullName: MongoDB.Entities.Extensions.DeleteAsync<MongoDB.Entities.Many<TChild>.Joined<T>>(MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  nameWithType.vb: Extensions.DeleteAsync(Of Many(Of TChild).Joined(Of T))(IClientSessionHandle, CancellationToken)
  fullName.vb: MongoDB.Entities.Extensions.DeleteAsync(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))(MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  name.vb: DeleteAsync(Of Many(Of TChild).Joined(Of T))(IClientSessionHandle, CancellationToken)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.DeleteAsync``1(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: DeleteAsync<Many<TChild>.Joined<T>>
    nameWithType: Extensions.DeleteAsync<Many<TChild>.Joined<T>>
    fullName: MongoDB.Entities.Extensions.DeleteAsync<MongoDB.Entities.Many<TChild>.Joined<T>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.DeleteAsync``1(MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: DeleteAsync(Of Many(Of TChild).Joined(Of T))
    nameWithType: Extensions.DeleteAsync(Of Many(Of TChild).Joined(Of T))
    fullName: MongoDB.Entities.Extensions.DeleteAsync(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Many`1.Joined`1.MongoDB.Entities.Extensions.NextSequentialNumberAsync``1(System.Threading.CancellationToken)
  commentId: M:MongoDB.Entities.Extensions.NextSequentialNumberAsync``1(``0,System.Threading.CancellationToken)
  parent: MongoDB.Entities.Extensions
  definition: MongoDB.Entities.Extensions.NextSequentialNumberAsync``1(``0,System.Threading.CancellationToken)
  name: NextSequentialNumberAsync<Many<TChild>.Joined<T>>(CancellationToken)
  nameWithType: Extensions.NextSequentialNumberAsync<Many<TChild>.Joined<T>>(CancellationToken)
  fullName: MongoDB.Entities.Extensions.NextSequentialNumberAsync<MongoDB.Entities.Many<TChild>.Joined<T>>(System.Threading.CancellationToken)
  nameWithType.vb: Extensions.NextSequentialNumberAsync(Of Many(Of TChild).Joined(Of T))(CancellationToken)
  fullName.vb: MongoDB.Entities.Extensions.NextSequentialNumberAsync(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))(System.Threading.CancellationToken)
  name.vb: NextSequentialNumberAsync(Of Many(Of TChild).Joined(Of T))(CancellationToken)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.NextSequentialNumberAsync``1(System.Threading.CancellationToken)
    name: NextSequentialNumberAsync<Many<TChild>.Joined<T>>
    nameWithType: Extensions.NextSequentialNumberAsync<Many<TChild>.Joined<T>>
    fullName: MongoDB.Entities.Extensions.NextSequentialNumberAsync<MongoDB.Entities.Many<TChild>.Joined<T>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.NextSequentialNumberAsync``1(System.Threading.CancellationToken)
    name: NextSequentialNumberAsync(Of Many(Of TChild).Joined(Of T))
    nameWithType: Extensions.NextSequentialNumberAsync(Of Many(Of TChild).Joined(Of T))
    fullName: MongoDB.Entities.Extensions.NextSequentialNumberAsync(Of MongoDB.Entities.Many(Of TChild).Joined(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.IEntity.MongoDB.Entities.Extensions.InitOneToMany``1(System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{{TChild}}}})
  commentId: M:MongoDB.Entities.Extensions.InitOneToMany``1(MongoDB.Entities.IEntity,System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{``0}}})
  parent: MongoDB.Entities.Extensions
  definition: MongoDB.Entities.Extensions.InitOneToMany``1(MongoDB.Entities.IEntity,System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{``0}}})
  name: InitOneToMany<TChild>(Expression<Func<Many<TChild>>>)
  nameWithType: Extensions.InitOneToMany<TChild>(Expression<Func<Many<TChild>>>)
  fullName: MongoDB.Entities.Extensions.InitOneToMany<TChild>(System.Linq.Expressions.Expression<System.Func<MongoDB.Entities.Many<TChild>>>)
  nameWithType.vb: Extensions.InitOneToMany(Of TChild)(Expression(Of Func(Of Many(Of TChild))))
  fullName.vb: MongoDB.Entities.Extensions.InitOneToMany(Of TChild)(System.Linq.Expressions.Expression(Of System.Func(Of MongoDB.Entities.Many(Of TChild))))
  name.vb: InitOneToMany(Of TChild)(Expression(Of Func(Of Many(Of TChild))))
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.InitOneToMany``1(System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{``0}}})
    name: InitOneToMany<TChild>
    nameWithType: Extensions.InitOneToMany<TChild>
    fullName: MongoDB.Entities.Extensions.InitOneToMany<TChild>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MongoDB.Entities.Many`1
    name: Many
    nameWithType: Many
    fullName: MongoDB.Entities.Many
  - name: <
    nameWithType: <
    fullName: <
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.InitOneToMany``1(System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{``0}}})
    name: InitOneToMany(Of TChild)
    nameWithType: Extensions.InitOneToMany(Of TChild)
    fullName: MongoDB.Entities.Extensions.InitOneToMany(Of TChild)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MongoDB.Entities.Many`1
    name: Many
    nameWithType: Many
    fullName: MongoDB.Entities.Many
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.IEntity.MongoDB.Entities.Extensions.InitManyToMany``1(System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{{TChild}}}},System.Linq.Expressions.Expression{System.Func{{TChild},System.Object}})
  commentId: M:MongoDB.Entities.Extensions.InitManyToMany``1(MongoDB.Entities.IEntity,System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{``0}}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  parent: MongoDB.Entities.Extensions
  definition: MongoDB.Entities.Extensions.InitManyToMany``1(MongoDB.Entities.IEntity,System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{``0}}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  name: InitManyToMany<TChild>(Expression<Func<Many<TChild>>>, Expression<Func<TChild, Object>>)
  nameWithType: Extensions.InitManyToMany<TChild>(Expression<Func<Many<TChild>>>, Expression<Func<TChild, Object>>)
  fullName: MongoDB.Entities.Extensions.InitManyToMany<TChild>(System.Linq.Expressions.Expression<System.Func<MongoDB.Entities.Many<TChild>>>, System.Linq.Expressions.Expression<System.Func<TChild, System.Object>>)
  nameWithType.vb: Extensions.InitManyToMany(Of TChild)(Expression(Of Func(Of Many(Of TChild))), Expression(Of Func(Of TChild, Object)))
  fullName.vb: MongoDB.Entities.Extensions.InitManyToMany(Of TChild)(System.Linq.Expressions.Expression(Of System.Func(Of MongoDB.Entities.Many(Of TChild))), System.Linq.Expressions.Expression(Of System.Func(Of TChild, System.Object)))
  name.vb: InitManyToMany(Of TChild)(Expression(Of Func(Of Many(Of TChild))), Expression(Of Func(Of TChild, Object)))
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.InitManyToMany``1(System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{``0}}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: InitManyToMany<TChild>
    nameWithType: Extensions.InitManyToMany<TChild>
    fullName: MongoDB.Entities.Extensions.InitManyToMany<TChild>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MongoDB.Entities.Many`1
    name: Many
    nameWithType: Many
    fullName: MongoDB.Entities.Many
  - name: <
    nameWithType: <
    fullName: <
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.InitManyToMany``1(System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{``0}}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: InitManyToMany(Of TChild)
    nameWithType: Extensions.InitManyToMany(Of TChild)
    fullName: MongoDB.Entities.Extensions.InitManyToMany(Of TChild)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MongoDB.Entities.Many`1
    name: Many
    nameWithType: Many
    fullName: MongoDB.Entities.Many
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MongoDB.Entities.Extensions.Database``1(``0)
  commentId: M:MongoDB.Entities.Extensions.Database``1(``0)
  name: Database<T>(T)
  nameWithType: Extensions.Database<T>(T)
  fullName: MongoDB.Entities.Extensions.Database<T>(T)
  nameWithType.vb: Extensions.Database(Of T)(T)
  fullName.vb: MongoDB.Entities.Extensions.Database(Of T)(T)
  name.vb: Database(Of T)(T)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.Database``1(``0)
    name: Database<T>
    nameWithType: Extensions.Database<T>
    fullName: MongoDB.Entities.Extensions.Database<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.Database``1(``0)
    name: Database(Of T)
    nameWithType: Extensions.Database(Of T)
    fullName: MongoDB.Entities.Extensions.Database(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Extensions
  commentId: T:MongoDB.Entities.Extensions
  parent: MongoDB.Entities
  name: Extensions
  nameWithType: Extensions
  fullName: MongoDB.Entities.Extensions
- uid: MongoDB.Entities.Extensions.DatabaseName``1(``0)
  commentId: M:MongoDB.Entities.Extensions.DatabaseName``1(``0)
  name: DatabaseName<T>(T)
  nameWithType: Extensions.DatabaseName<T>(T)
  fullName: MongoDB.Entities.Extensions.DatabaseName<T>(T)
  nameWithType.vb: Extensions.DatabaseName(Of T)(T)
  fullName.vb: MongoDB.Entities.Extensions.DatabaseName(Of T)(T)
  name.vb: DatabaseName(Of T)(T)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.DatabaseName``1(``0)
    name: DatabaseName<T>
    nameWithType: Extensions.DatabaseName<T>
    fullName: MongoDB.Entities.Extensions.DatabaseName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.DatabaseName``1(``0)
    name: DatabaseName(Of T)
    nameWithType: Extensions.DatabaseName(Of T)
    fullName: MongoDB.Entities.Extensions.DatabaseName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Extensions.Collection``1(``0)
  commentId: M:MongoDB.Entities.Extensions.Collection``1(``0)
  name: Collection<T>(T)
  nameWithType: Extensions.Collection<T>(T)
  fullName: MongoDB.Entities.Extensions.Collection<T>(T)
  nameWithType.vb: Extensions.Collection(Of T)(T)
  fullName.vb: MongoDB.Entities.Extensions.Collection(Of T)(T)
  name.vb: Collection(Of T)(T)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.Collection``1(``0)
    name: Collection<T>
    nameWithType: Extensions.Collection<T>
    fullName: MongoDB.Entities.Extensions.Collection<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.Collection``1(``0)
    name: Collection(Of T)
    nameWithType: Extensions.Collection(Of T)
    fullName: MongoDB.Entities.Extensions.Collection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Extensions.CollectionName``1(``0)
  commentId: M:MongoDB.Entities.Extensions.CollectionName``1(``0)
  name: CollectionName<T>(T)
  nameWithType: Extensions.CollectionName<T>(T)
  fullName: MongoDB.Entities.Extensions.CollectionName<T>(T)
  nameWithType.vb: Extensions.CollectionName(Of T)(T)
  fullName.vb: MongoDB.Entities.Extensions.CollectionName(Of T)(T)
  name.vb: CollectionName(Of T)(T)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.CollectionName``1(``0)
    name: CollectionName<T>
    nameWithType: Extensions.CollectionName<T>
    fullName: MongoDB.Entities.Extensions.CollectionName<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.CollectionName``1(``0)
    name: CollectionName(Of T)
    nameWithType: Extensions.CollectionName(Of T)
    fullName: MongoDB.Entities.Extensions.CollectionName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Extensions.Queryable``1(``0,MongoDB.Driver.AggregateOptions)
  commentId: M:MongoDB.Entities.Extensions.Queryable``1(``0,MongoDB.Driver.AggregateOptions)
  isExternal: true
  name: Queryable<T>(T, AggregateOptions)
  nameWithType: Extensions.Queryable<T>(T, AggregateOptions)
  fullName: MongoDB.Entities.Extensions.Queryable<T>(T, MongoDB.Driver.AggregateOptions)
  nameWithType.vb: Extensions.Queryable(Of T)(T, AggregateOptions)
  fullName.vb: MongoDB.Entities.Extensions.Queryable(Of T)(T, MongoDB.Driver.AggregateOptions)
  name.vb: Queryable(Of T)(T, AggregateOptions)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.Queryable``1(``0,MongoDB.Driver.AggregateOptions)
    name: Queryable<T>
    nameWithType: Extensions.Queryable<T>
    fullName: MongoDB.Entities.Extensions.Queryable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.AggregateOptions
    name: AggregateOptions
    nameWithType: AggregateOptions
    fullName: MongoDB.Driver.AggregateOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.Queryable``1(``0,MongoDB.Driver.AggregateOptions)
    name: Queryable(Of T)
    nameWithType: Extensions.Queryable(Of T)
    fullName: MongoDB.Entities.Extensions.Queryable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.AggregateOptions
    name: AggregateOptions
    nameWithType: AggregateOptions
    fullName: MongoDB.Driver.AggregateOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Extensions.Fluent``1(``0,MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.AggregateOptions)
  commentId: M:MongoDB.Entities.Extensions.Fluent``1(``0,MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.AggregateOptions)
  isExternal: true
  name: Fluent<T>(T, IClientSessionHandle, AggregateOptions)
  nameWithType: Extensions.Fluent<T>(T, IClientSessionHandle, AggregateOptions)
  fullName: MongoDB.Entities.Extensions.Fluent<T>(T, MongoDB.Driver.IClientSessionHandle, MongoDB.Driver.AggregateOptions)
  nameWithType.vb: Extensions.Fluent(Of T)(T, IClientSessionHandle, AggregateOptions)
  fullName.vb: MongoDB.Entities.Extensions.Fluent(Of T)(T, MongoDB.Driver.IClientSessionHandle, MongoDB.Driver.AggregateOptions)
  name.vb: Fluent(Of T)(T, IClientSessionHandle, AggregateOptions)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.Fluent``1(``0,MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.AggregateOptions)
    name: Fluent<T>
    nameWithType: Extensions.Fluent<T>
    fullName: MongoDB.Entities.Extensions.Fluent<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.AggregateOptions
    name: AggregateOptions
    nameWithType: AggregateOptions
    fullName: MongoDB.Driver.AggregateOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.Fluent``1(``0,MongoDB.Driver.IClientSessionHandle,MongoDB.Driver.AggregateOptions)
    name: Fluent(Of T)
    nameWithType: Extensions.Fluent(Of T)
    fullName: MongoDB.Entities.Extensions.Fluent(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.AggregateOptions
    name: AggregateOptions
    nameWithType: AggregateOptions
    fullName: MongoDB.Driver.AggregateOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Extensions.ToReference``1(``0)
  commentId: M:MongoDB.Entities.Extensions.ToReference``1(``0)
  name: ToReference<T>(T)
  nameWithType: Extensions.ToReference<T>(T)
  fullName: MongoDB.Entities.Extensions.ToReference<T>(T)
  nameWithType.vb: Extensions.ToReference(Of T)(T)
  fullName.vb: MongoDB.Entities.Extensions.ToReference(Of T)(T)
  name.vb: ToReference(Of T)(T)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.ToReference``1(``0)
    name: ToReference<T>
    nameWithType: Extensions.ToReference<T>
    fullName: MongoDB.Entities.Extensions.ToReference<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.ToReference``1(``0)
    name: ToReference(Of T)
    nameWithType: Extensions.ToReference(Of T)
    fullName: MongoDB.Entities.Extensions.ToReference(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Extensions.ToDocument``1(``0)
  commentId: M:MongoDB.Entities.Extensions.ToDocument``1(``0)
  name: ToDocument<T>(T)
  nameWithType: Extensions.ToDocument<T>(T)
  fullName: MongoDB.Entities.Extensions.ToDocument<T>(T)
  nameWithType.vb: Extensions.ToDocument(Of T)(T)
  fullName.vb: MongoDB.Entities.Extensions.ToDocument(Of T)(T)
  name.vb: ToDocument(Of T)(T)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.ToDocument``1(``0)
    name: ToDocument<T>
    nameWithType: Extensions.ToDocument<T>
    fullName: MongoDB.Entities.Extensions.ToDocument<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.ToDocument``1(``0)
    name: ToDocument(Of T)
    nameWithType: Extensions.ToDocument(Of T)
    fullName: MongoDB.Entities.Extensions.ToDocument(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Extensions.SaveAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  commentId: M:MongoDB.Entities.Extensions.SaveAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  isExternal: true
  name: SaveAsync<T>(T, IClientSessionHandle, CancellationToken)
  nameWithType: Extensions.SaveAsync<T>(T, IClientSessionHandle, CancellationToken)
  fullName: MongoDB.Entities.Extensions.SaveAsync<T>(T, MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  nameWithType.vb: Extensions.SaveAsync(Of T)(T, IClientSessionHandle, CancellationToken)
  fullName.vb: MongoDB.Entities.Extensions.SaveAsync(Of T)(T, MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  name.vb: SaveAsync(Of T)(T, IClientSessionHandle, CancellationToken)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.SaveAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: SaveAsync<T>
    nameWithType: Extensions.SaveAsync<T>
    fullName: MongoDB.Entities.Extensions.SaveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.SaveAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: SaveAsync(Of T)
    nameWithType: Extensions.SaveAsync(Of T)
    fullName: MongoDB.Entities.Extensions.SaveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Extensions.SaveOnlyAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  commentId: M:MongoDB.Entities.Extensions.SaveOnlyAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  isExternal: true
  name: SaveOnlyAsync<T>(T, Expression<Func<T, Object>>, IClientSessionHandle, CancellationToken)
  nameWithType: Extensions.SaveOnlyAsync<T>(T, Expression<Func<T, Object>>, IClientSessionHandle, CancellationToken)
  fullName: MongoDB.Entities.Extensions.SaveOnlyAsync<T>(T, System.Linq.Expressions.Expression<System.Func<T, System.Object>>, MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  nameWithType.vb: Extensions.SaveOnlyAsync(Of T)(T, Expression(Of Func(Of T, Object)), IClientSessionHandle, CancellationToken)
  fullName.vb: MongoDB.Entities.Extensions.SaveOnlyAsync(Of T)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object)), MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  name.vb: SaveOnlyAsync(Of T)(T, Expression(Of Func(Of T, Object)), IClientSessionHandle, CancellationToken)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.SaveOnlyAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: SaveOnlyAsync<T>
    nameWithType: Extensions.SaveOnlyAsync<T>
    fullName: MongoDB.Entities.Extensions.SaveOnlyAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.SaveOnlyAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: SaveOnlyAsync(Of T)
    nameWithType: Extensions.SaveOnlyAsync(Of T)
    fullName: MongoDB.Entities.Extensions.SaveOnlyAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Extensions.SaveExceptAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  commentId: M:MongoDB.Entities.Extensions.SaveExceptAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  isExternal: true
  name: SaveExceptAsync<T>(T, Expression<Func<T, Object>>, IClientSessionHandle, CancellationToken)
  nameWithType: Extensions.SaveExceptAsync<T>(T, Expression<Func<T, Object>>, IClientSessionHandle, CancellationToken)
  fullName: MongoDB.Entities.Extensions.SaveExceptAsync<T>(T, System.Linq.Expressions.Expression<System.Func<T, System.Object>>, MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  nameWithType.vb: Extensions.SaveExceptAsync(Of T)(T, Expression(Of Func(Of T, Object)), IClientSessionHandle, CancellationToken)
  fullName.vb: MongoDB.Entities.Extensions.SaveExceptAsync(Of T)(T, System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object)), MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  name.vb: SaveExceptAsync(Of T)(T, Expression(Of Func(Of T, Object)), IClientSessionHandle, CancellationToken)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.SaveExceptAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: SaveExceptAsync<T>
    nameWithType: Extensions.SaveExceptAsync<T>
    fullName: MongoDB.Entities.Extensions.SaveExceptAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.SaveExceptAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: SaveExceptAsync(Of T)
    nameWithType: Extensions.SaveExceptAsync(Of T)
    fullName: MongoDB.Entities.Extensions.SaveExceptAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Extensions.SavePreservingAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  commentId: M:MongoDB.Entities.Extensions.SavePreservingAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  isExternal: true
  name: SavePreservingAsync<T>(T, IClientSessionHandle, CancellationToken)
  nameWithType: Extensions.SavePreservingAsync<T>(T, IClientSessionHandle, CancellationToken)
  fullName: MongoDB.Entities.Extensions.SavePreservingAsync<T>(T, MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  nameWithType.vb: Extensions.SavePreservingAsync(Of T)(T, IClientSessionHandle, CancellationToken)
  fullName.vb: MongoDB.Entities.Extensions.SavePreservingAsync(Of T)(T, MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  name.vb: SavePreservingAsync(Of T)(T, IClientSessionHandle, CancellationToken)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.SavePreservingAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: SavePreservingAsync<T>
    nameWithType: Extensions.SavePreservingAsync<T>
    fullName: MongoDB.Entities.Extensions.SavePreservingAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.SavePreservingAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: SavePreservingAsync(Of T)
    nameWithType: Extensions.SavePreservingAsync(Of T)
    fullName: MongoDB.Entities.Extensions.SavePreservingAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Extensions.DeleteAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  commentId: M:MongoDB.Entities.Extensions.DeleteAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
  isExternal: true
  name: DeleteAsync<T>(T, IClientSessionHandle, CancellationToken)
  nameWithType: Extensions.DeleteAsync<T>(T, IClientSessionHandle, CancellationToken)
  fullName: MongoDB.Entities.Extensions.DeleteAsync<T>(T, MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  nameWithType.vb: Extensions.DeleteAsync(Of T)(T, IClientSessionHandle, CancellationToken)
  fullName.vb: MongoDB.Entities.Extensions.DeleteAsync(Of T)(T, MongoDB.Driver.IClientSessionHandle, System.Threading.CancellationToken)
  name.vb: DeleteAsync(Of T)(T, IClientSessionHandle, CancellationToken)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.DeleteAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: DeleteAsync<T>
    nameWithType: Extensions.DeleteAsync<T>
    fullName: MongoDB.Entities.Extensions.DeleteAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.DeleteAsync``1(``0,MongoDB.Driver.IClientSessionHandle,System.Threading.CancellationToken)
    name: DeleteAsync(Of T)
    nameWithType: Extensions.DeleteAsync(Of T)
    fullName: MongoDB.Entities.Extensions.DeleteAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IClientSessionHandle
    name: IClientSessionHandle
    nameWithType: IClientSessionHandle
    fullName: MongoDB.Driver.IClientSessionHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Extensions.NextSequentialNumberAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:MongoDB.Entities.Extensions.NextSequentialNumberAsync``1(``0,System.Threading.CancellationToken)
  isExternal: true
  name: NextSequentialNumberAsync<T>(T, CancellationToken)
  nameWithType: Extensions.NextSequentialNumberAsync<T>(T, CancellationToken)
  fullName: MongoDB.Entities.Extensions.NextSequentialNumberAsync<T>(T, System.Threading.CancellationToken)
  nameWithType.vb: Extensions.NextSequentialNumberAsync(Of T)(T, CancellationToken)
  fullName.vb: MongoDB.Entities.Extensions.NextSequentialNumberAsync(Of T)(T, System.Threading.CancellationToken)
  name.vb: NextSequentialNumberAsync(Of T)(T, CancellationToken)
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.NextSequentialNumberAsync``1(``0,System.Threading.CancellationToken)
    name: NextSequentialNumberAsync<T>
    nameWithType: Extensions.NextSequentialNumberAsync<T>
    fullName: MongoDB.Entities.Extensions.NextSequentialNumberAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.NextSequentialNumberAsync``1(``0,System.Threading.CancellationToken)
    name: NextSequentialNumberAsync(Of T)
    nameWithType: Extensions.NextSequentialNumberAsync(Of T)
    fullName: MongoDB.Entities.Extensions.NextSequentialNumberAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Extensions.InitOneToMany``1(MongoDB.Entities.IEntity,System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{``0}}})
  commentId: M:MongoDB.Entities.Extensions.InitOneToMany``1(MongoDB.Entities.IEntity,System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{``0}}})
  isExternal: true
  name: InitOneToMany<TChild>(IEntity, Expression<Func<Many<TChild>>>)
  nameWithType: Extensions.InitOneToMany<TChild>(IEntity, Expression<Func<Many<TChild>>>)
  fullName: MongoDB.Entities.Extensions.InitOneToMany<TChild>(MongoDB.Entities.IEntity, System.Linq.Expressions.Expression<System.Func<MongoDB.Entities.Many<TChild>>>)
  nameWithType.vb: Extensions.InitOneToMany(Of TChild)(IEntity, Expression(Of Func(Of Many(Of TChild))))
  fullName.vb: MongoDB.Entities.Extensions.InitOneToMany(Of TChild)(MongoDB.Entities.IEntity, System.Linq.Expressions.Expression(Of System.Func(Of MongoDB.Entities.Many(Of TChild))))
  name.vb: InitOneToMany(Of TChild)(IEntity, Expression(Of Func(Of Many(Of TChild))))
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.InitOneToMany``1(MongoDB.Entities.IEntity,System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{``0}}})
    name: InitOneToMany<TChild>
    nameWithType: Extensions.InitOneToMany<TChild>
    fullName: MongoDB.Entities.Extensions.InitOneToMany<TChild>
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.IEntity
    name: IEntity
    nameWithType: IEntity
    fullName: MongoDB.Entities.IEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MongoDB.Entities.Many`1
    name: Many
    nameWithType: Many
    fullName: MongoDB.Entities.Many
  - name: <
    nameWithType: <
    fullName: <
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.InitOneToMany``1(MongoDB.Entities.IEntity,System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{``0}}})
    name: InitOneToMany(Of TChild)
    nameWithType: Extensions.InitOneToMany(Of TChild)
    fullName: MongoDB.Entities.Extensions.InitOneToMany(Of TChild)
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.IEntity
    name: IEntity
    nameWithType: IEntity
    fullName: MongoDB.Entities.IEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MongoDB.Entities.Many`1
    name: Many
    nameWithType: Many
    fullName: MongoDB.Entities.Many
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Extensions.InitManyToMany``1(MongoDB.Entities.IEntity,System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{``0}}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:MongoDB.Entities.Extensions.InitManyToMany``1(MongoDB.Entities.IEntity,System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{``0}}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  isExternal: true
  name: InitManyToMany<TChild>(IEntity, Expression<Func<Many<TChild>>>, Expression<Func<TChild, Object>>)
  nameWithType: Extensions.InitManyToMany<TChild>(IEntity, Expression<Func<Many<TChild>>>, Expression<Func<TChild, Object>>)
  fullName: MongoDB.Entities.Extensions.InitManyToMany<TChild>(MongoDB.Entities.IEntity, System.Linq.Expressions.Expression<System.Func<MongoDB.Entities.Many<TChild>>>, System.Linq.Expressions.Expression<System.Func<TChild, System.Object>>)
  nameWithType.vb: Extensions.InitManyToMany(Of TChild)(IEntity, Expression(Of Func(Of Many(Of TChild))), Expression(Of Func(Of TChild, Object)))
  fullName.vb: MongoDB.Entities.Extensions.InitManyToMany(Of TChild)(MongoDB.Entities.IEntity, System.Linq.Expressions.Expression(Of System.Func(Of MongoDB.Entities.Many(Of TChild))), System.Linq.Expressions.Expression(Of System.Func(Of TChild, System.Object)))
  name.vb: InitManyToMany(Of TChild)(IEntity, Expression(Of Func(Of Many(Of TChild))), Expression(Of Func(Of TChild, Object)))
  spec.csharp:
  - uid: MongoDB.Entities.Extensions.InitManyToMany``1(MongoDB.Entities.IEntity,System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{``0}}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: InitManyToMany<TChild>
    nameWithType: Extensions.InitManyToMany<TChild>
    fullName: MongoDB.Entities.Extensions.InitManyToMany<TChild>
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.IEntity
    name: IEntity
    nameWithType: IEntity
    fullName: MongoDB.Entities.IEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MongoDB.Entities.Many`1
    name: Many
    nameWithType: Many
    fullName: MongoDB.Entities.Many
  - name: <
    nameWithType: <
    fullName: <
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MongoDB.Entities.Extensions.InitManyToMany``1(MongoDB.Entities.IEntity,System.Linq.Expressions.Expression{System.Func{MongoDB.Entities.Many{``0}}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
    name: InitManyToMany(Of TChild)
    nameWithType: Extensions.InitManyToMany(Of TChild)
    fullName: MongoDB.Entities.Extensions.InitManyToMany(Of TChild)
  - name: (
    nameWithType: (
    fullName: (
  - uid: MongoDB.Entities.IEntity
    name: IEntity
    nameWithType: IEntity
    fullName: MongoDB.Entities.IEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MongoDB.Entities.Many`1
    name: Many
    nameWithType: Many
    fullName: MongoDB.Entities.Many
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChild
    nameWithType: TChild
    fullName: TChild
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Entities.Many`1.Joined`1.Results*
  commentId: Overload:MongoDB.Entities.Many`1.Joined`1.Results
  name: Results
  nameWithType: Many<TChild>.Joined<T>.Results
  fullName: MongoDB.Entities.Many<TChild>.Joined<T>.Results
  nameWithType.vb: Many(Of TChild).Joined(Of T).Results
  fullName.vb: MongoDB.Entities.Many(Of TChild).Joined(Of T).Results
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
