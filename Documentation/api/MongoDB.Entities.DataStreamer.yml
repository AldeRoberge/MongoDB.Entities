### YamlMime:ManagedReference
items:
- uid: MongoDB.Entities.DataStreamer
  commentId: T:MongoDB.Entities.DataStreamer
  id: DataStreamer
  parent: MongoDB.Entities
  children:
  - MongoDB.Entities.DataStreamer.#ctor(MongoDB.Entities.FileEntity)
  - MongoDB.Entities.DataStreamer.DownloadAsync(Stream,System.Int32,CancellationToken,IClientSessionHandle)
  - MongoDB.Entities.DataStreamer.DownloadWithTimeoutAsync(Stream,System.Int32,System.Int32,IClientSessionHandle)
  - MongoDB.Entities.DataStreamer.UploadAsync(Stream,System.Int32,CancellationToken,IClientSessionHandle)
  - MongoDB.Entities.DataStreamer.UploadWithTimeoutAsync(Stream,System.Int32,System.Int32,IClientSessionHandle)
  langs:
  - csharp
  - vb
  name: DataStreamer
  nameWithType: DataStreamer
  fullName: MongoDB.Entities.DataStreamer
  type: Class
  source:
    id: DataStreamer
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\FileEntity.cs
    startLine: 68
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  summary: "\nProvides the interface for uploading and downloading data chunks for file entities.\n"
  example: []
  syntax:
    content: 'public class DataStreamer : object'
    content.vb: >-
      Public Class DataStreamer

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MongoDB.Entities.DataStreamer.#ctor(MongoDB.Entities.FileEntity)
  commentId: M:MongoDB.Entities.DataStreamer.#ctor(MongoDB.Entities.FileEntity)
  id: '#ctor(MongoDB.Entities.FileEntity)'
  parent: MongoDB.Entities.DataStreamer
  langs:
  - csharp
  - vb
  name: DataStreamer(FileEntity)
  nameWithType: DataStreamer.DataStreamer(FileEntity)
  fullName: MongoDB.Entities.DataStreamer.DataStreamer(MongoDB.Entities.FileEntity)
  type: Constructor
  source:
    id: .ctor
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\FileEntity.cs
    startLine: 81
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  syntax:
    content: public DataStreamer(FileEntity parent)
    parameters:
    - id: parent
      type: MongoDB.Entities.FileEntity
    content.vb: Public Sub New(parent As FileEntity)
  overload: MongoDB.Entities.DataStreamer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MongoDB.Entities.DataStreamer.DownloadWithTimeoutAsync(Stream,System.Int32,System.Int32,IClientSessionHandle)
  commentId: M:MongoDB.Entities.DataStreamer.DownloadWithTimeoutAsync(Stream,System.Int32,System.Int32,IClientSessionHandle)
  id: DownloadWithTimeoutAsync(Stream,System.Int32,System.Int32,IClientSessionHandle)
  parent: MongoDB.Entities.DataStreamer
  langs:
  - csharp
  - vb
  name: DownloadWithTimeoutAsync(Stream, Int32, Int32, IClientSessionHandle)
  nameWithType: DataStreamer.DownloadWithTimeoutAsync(Stream, Int32, Int32, IClientSessionHandle)
  fullName: MongoDB.Entities.DataStreamer.DownloadWithTimeoutAsync(Stream, System.Int32, System.Int32, IClientSessionHandle)
  type: Method
  source:
    id: DownloadWithTimeoutAsync
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\FileEntity.cs
    startLine: 108
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  summary: "\nDownload binary data for this file entity from mongodb in chunks into a given stream with a timeout period.\n"
  example: []
  syntax:
    content: public Task DownloadWithTimeoutAsync(Stream stream, int timeOutSeconds, int batchSize = 1, IClientSessionHandle session = null)
    parameters:
    - id: stream
      type: Stream
      description: The output stream to write the data
    - id: timeOutSeconds
      type: System.Int32
      description: The maximum number of seconds allowed for the operation to complete
    - id: batchSize
      type: System.Int32
      description: ''
    - id: session
      type: IClientSessionHandle
      description: ''
    return:
      type: Task
    content.vb: Public Function DownloadWithTimeoutAsync(stream As Stream, timeOutSeconds As Integer, batchSize As Integer = 1, session As IClientSessionHandle = Nothing) As Task
  overload: MongoDB.Entities.DataStreamer.DownloadWithTimeoutAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MongoDB.Entities.DataStreamer.DownloadAsync(Stream,System.Int32,CancellationToken,IClientSessionHandle)
  commentId: M:MongoDB.Entities.DataStreamer.DownloadAsync(Stream,System.Int32,CancellationToken,IClientSessionHandle)
  id: DownloadAsync(Stream,System.Int32,CancellationToken,IClientSessionHandle)
  parent: MongoDB.Entities.DataStreamer
  langs:
  - csharp
  - vb
  name: DownloadAsync(Stream, Int32, CancellationToken, IClientSessionHandle)
  nameWithType: DataStreamer.DownloadAsync(Stream, Int32, CancellationToken, IClientSessionHandle)
  fullName: MongoDB.Entities.DataStreamer.DownloadAsync(Stream, System.Int32, CancellationToken, IClientSessionHandle)
  type: Method
  source:
    id: DownloadAsync
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\FileEntity.cs
    startLine: 120
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  summary: "\nDownload binary data for this file entity from mongodb in chunks into a given stream.\n"
  example: []
  syntax:
    content: public async Task DownloadAsync(Stream stream, int batchSize = 1, CancellationToken cancellation = null, IClientSessionHandle session = null)
    parameters:
    - id: stream
      type: Stream
      description: The output stream to write the data
    - id: batchSize
      type: System.Int32
      description: The number of chunks you want returned at once
    - id: cancellation
      type: CancellationToken
      description: An optional cancellation token.
    - id: session
      type: IClientSessionHandle
      description: An optional session if using within a transaction
    return:
      type: Task
    content.vb: Public Function DownloadAsync(stream As Stream, batchSize As Integer = 1, cancellation As CancellationToken = Nothing, session As IClientSessionHandle = Nothing) As Task
  overload: MongoDB.Entities.DataStreamer.DownloadAsync*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: MongoDB.Entities.DataStreamer.UploadWithTimeoutAsync(Stream,System.Int32,System.Int32,IClientSessionHandle)
  commentId: M:MongoDB.Entities.DataStreamer.UploadWithTimeoutAsync(Stream,System.Int32,System.Int32,IClientSessionHandle)
  id: UploadWithTimeoutAsync(Stream,System.Int32,System.Int32,IClientSessionHandle)
  parent: MongoDB.Entities.DataStreamer
  langs:
  - csharp
  - vb
  name: UploadWithTimeoutAsync(Stream, Int32, Int32, IClientSessionHandle)
  nameWithType: DataStreamer.UploadWithTimeoutAsync(Stream, Int32, Int32, IClientSessionHandle)
  fullName: MongoDB.Entities.DataStreamer.UploadWithTimeoutAsync(Stream, System.Int32, System.Int32, IClientSessionHandle)
  type: Method
  source:
    id: UploadWithTimeoutAsync
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\FileEntity.cs
    startLine: 163
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  summary: "\nUpload binary data for this file entity into mongodb in chunks from a given stream with a timeout period.\n"
  example: []
  syntax:
    content: public Task UploadWithTimeoutAsync(Stream stream, int timeOutSeconds, int chunkSizeKB = 256, IClientSessionHandle session = null)
    parameters:
    - id: stream
      type: Stream
      description: The input stream to read the data from
    - id: timeOutSeconds
      type: System.Int32
      description: The maximum number of seconds allowed for the operation to complete
    - id: chunkSizeKB
      type: System.Int32
      description: The &apos;average&apos; size of one chunk in KiloBytes
    - id: session
      type: IClientSessionHandle
      description: An optional session if using within a transaction
    return:
      type: Task
    content.vb: Public Function UploadWithTimeoutAsync(stream As Stream, timeOutSeconds As Integer, chunkSizeKB As Integer = 256, session As IClientSessionHandle = Nothing) As Task
  overload: MongoDB.Entities.DataStreamer.UploadWithTimeoutAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MongoDB.Entities.DataStreamer.UploadAsync(Stream,System.Int32,CancellationToken,IClientSessionHandle)
  commentId: M:MongoDB.Entities.DataStreamer.UploadAsync(Stream,System.Int32,CancellationToken,IClientSessionHandle)
  id: UploadAsync(Stream,System.Int32,CancellationToken,IClientSessionHandle)
  parent: MongoDB.Entities.DataStreamer
  langs:
  - csharp
  - vb
  name: UploadAsync(Stream, Int32, CancellationToken, IClientSessionHandle)
  nameWithType: DataStreamer.UploadAsync(Stream, Int32, CancellationToken, IClientSessionHandle)
  fullName: MongoDB.Entities.DataStreamer.UploadAsync(Stream, System.Int32, CancellationToken, IClientSessionHandle)
  type: Method
  source:
    id: UploadAsync
    path: D:\SOURCE-CONTROL\MongoDB.Entities\Documentation\src\Core\FileEntity.cs
    startLine: 176
  assemblies:
  - MongoDB.Entities
  namespace: MongoDB.Entities
  summary: "\nUpload binary data for this file entity into mongodb in chunks from a given stream.\n<p>TIP: Make sure to save the entity before calling this method.</p>\n"
  example: []
  syntax:
    content: public async Task UploadAsync(Stream stream, int chunkSizeKB = 256, CancellationToken cancellation = null, IClientSessionHandle session = null)
    parameters:
    - id: stream
      type: Stream
      description: The input stream to read the data from
    - id: chunkSizeKB
      type: System.Int32
      description: The &apos;average&apos; size of one chunk in KiloBytes
    - id: cancellation
      type: CancellationToken
      description: An optional cancellation token.
    - id: session
      type: IClientSessionHandle
      description: An optional session if using within a transaction
    return:
      type: Task
    content.vb: Public Function UploadAsync(stream As Stream, chunkSizeKB As Integer = 256, cancellation As CancellationToken = Nothing, session As IClientSessionHandle = Nothing) As Task
  overload: MongoDB.Entities.DataStreamer.UploadAsync*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: MongoDB.Entities
  commentId: N:MongoDB.Entities
  name: MongoDB.Entities
  nameWithType: MongoDB.Entities
  fullName: MongoDB.Entities
- uid: MongoDB.Entities.DataStreamer.#ctor*
  commentId: Overload:MongoDB.Entities.DataStreamer.#ctor
  name: DataStreamer
  nameWithType: DataStreamer.DataStreamer
  fullName: MongoDB.Entities.DataStreamer.DataStreamer
- uid: MongoDB.Entities.FileEntity
  commentId: T:MongoDB.Entities.FileEntity
  parent: MongoDB.Entities
  name: FileEntity
  nameWithType: FileEntity
  fullName: MongoDB.Entities.FileEntity
- uid: MongoDB.Entities.DataStreamer.DownloadWithTimeoutAsync*
  commentId: Overload:MongoDB.Entities.DataStreamer.DownloadWithTimeoutAsync
  name: DownloadWithTimeoutAsync
  nameWithType: DataStreamer.DownloadWithTimeoutAsync
  fullName: MongoDB.Entities.DataStreamer.DownloadWithTimeoutAsync
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: IClientSessionHandle
  isExternal: true
  name: IClientSessionHandle
  nameWithType: IClientSessionHandle
  fullName: IClientSessionHandle
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: MongoDB.Entities.DataStreamer.DownloadAsync*
  commentId: Overload:MongoDB.Entities.DataStreamer.DownloadAsync
  name: DownloadAsync
  nameWithType: DataStreamer.DownloadAsync
  fullName: MongoDB.Entities.DataStreamer.DownloadAsync
- uid: CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: CancellationToken
- uid: MongoDB.Entities.DataStreamer.UploadWithTimeoutAsync*
  commentId: Overload:MongoDB.Entities.DataStreamer.UploadWithTimeoutAsync
  name: UploadWithTimeoutAsync
  nameWithType: DataStreamer.UploadWithTimeoutAsync
  fullName: MongoDB.Entities.DataStreamer.UploadWithTimeoutAsync
- uid: MongoDB.Entities.DataStreamer.UploadAsync*
  commentId: Overload:MongoDB.Entities.DataStreamer.UploadAsync
  name: UploadAsync
  nameWithType: DataStreamer.UploadAsync
  fullName: MongoDB.Entities.DataStreamer.UploadAsync
